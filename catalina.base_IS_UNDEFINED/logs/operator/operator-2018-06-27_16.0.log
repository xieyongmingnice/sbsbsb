2018-06-27 16:02:06,520 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:04:59,618 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-27 16:04:59,645 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@21a66d45: startup date [Wed Jun 27 16:04:59 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@335b5620
2018-06-27 16:05:00,813 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:05:00,814 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:05:01,025 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-27 16:05:01,159 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 16:05:01,427 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-27 16:05:01,464 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:05:01,513 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:05:01,514 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:05:01,572 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$4be9db9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:05:01,592 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$146ac00c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:05:01,601 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$19bd355b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:05:01,636 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$62cf6b79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:05:01,682 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$35d73858] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:05:02,058 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-27 16:05:02,068 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-27 16:05:02,069 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-27 16:05:02,241 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-27 16:05:02,242 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2597 ms
2018-06-27 16:05:02,624 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 16:05:02,626 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 16:05:02,630 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-27 16:05:02,631 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 16:05:02,631 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 16:05:02,631 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 16:05:02,631 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 16:05:02,631 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-27 16:05:02,632 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 16:05:02,632 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-27 16:05:02,632 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-27 16:05:03,009 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-27 16:05:03,851 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b544732: startup date [Wed Jun 27 16:05:03 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@21a66d45
2018-06-27 16:05:03,868 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:05:04,111 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:05:04,420 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@401926df: startup date [Wed Jun 27 16:05:04 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@21a66d45
2018-06-27 16:05:04,437 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:05:05,369 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:05:05,370 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:05:05,374 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:05:05,375 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:05:05,542 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@21a66d45: startup date [Wed Jun 27 16:04:59 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@335b5620
2018-06-27 16:05:05,668 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:05:05,669 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:05:05,669 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:05:05,670 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:05:05,670 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:05:05,670 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:05:05,671 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:05:05,671 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:05:05,672 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:05:05,672 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:05:05,672 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:05:05,673 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:05:05,673 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:05:05,674 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:05:05,674 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:05:05,674 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:05:05,675 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-27 16:05:05,676 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:05:05,677 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:05:05,678 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:05:05,678 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:05:05,678 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:05:05,679 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:05:05,681 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-27 16:05:05,681 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 16:05:05,721 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:05:05,722 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:05:05,748 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-27 16:05:05,776 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:05:06,578 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:05:06,579 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:05:06,579 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-27 16:05:06,580 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:05:06,581 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 16:05:06,581 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:05:06,583 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-27 16:05:06,585 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:05:06,585 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:05:06,586 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:05:06,587 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:05:06,587 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-27 16:05:06,587 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-27 16:05:06,588 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:05:06,588 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-27 16:05:06,589 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:05:06,589 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:05:06,589 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:05:06,590 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:05:06,592 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:05:06,593 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-27 16:05:06,593 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:05:06,594 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-27 16:05:06,595 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-27 16:05:06,596 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:05:06,597 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-27 16:05:06,597 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-27 16:05:06,598 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:05:06,599 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-27 16:05:07,145 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-27 16:05:07,146 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 16:05:07,154 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-27 16:05:07,157 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-27 16:05:07,157 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-27 16:05:07,158 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-27 16:05:07,159 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-27 16:05:07,160 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-27 16:05:07,163 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-27 16:05:07,180 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-27 16:05:07,194 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-27 16:05:07,199 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-27 16:05:07,212 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=21a66d45,type=ConfigurationPropertiesRebinder]
2018-06-27 16:05:07,216 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 16:05:07,218 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-27 16:05:07,600 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:05:07,608 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=33a597a0-dd6e-42b9-aba6-39d33a20ae40, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-27 16:05:07,609 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-27 16:05:07,609 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-27 16:05:07,705 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-27 16:05:07,715 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-27 16:05:07,818 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-27 16:05:07,889 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-27 16:05:07,889 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-27 16:05:08,002 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-27 16:05:08,002 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-27 16:05:08,283 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:05:08,383 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-27 16:05:08,383 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-27 16:05:08,383 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-27 16:05:08,384 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-27 16:05:08,384 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-27 16:05:08,384 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-27 16:05:08,384 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-27 16:05:08,565 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-27 16:05:08,568 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-27 16:05:08,570 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-27 16:05:08,573 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1530086708573 with initial instances count: 2
2018-06-27 16:05:08,599 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-27 16:05:08,600 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1530086708600, current=UP, previous=STARTING]
2018-06-27 16:05:08,601 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-27 16:05:08,630 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-27 16:05:08,704 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-27 16:05:08,705 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-27 16:05:08,710 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 11.233 seconds (JVM running for 13.111)
2018-06-27 16:05:11,287 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-27 16:05:18,235 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 16:05:18,236 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 16:05:18,267 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-06-27 16:06:04,926 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-27 16:06:04,946 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a9950f1: startup date [Wed Jun 27 16:06:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@600b9d27
2018-06-27 16:06:05,899 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:06:05,901 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:06:06,337 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-27 16:06:06,577 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 16:06:07,440 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-27 16:06:07,527 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:06:07,609 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:06:07,611 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:06:07,713 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f008a28e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:06:07,755 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$b88986fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:06:07,772 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bddbfc4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:06:07,853 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$6ee326b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:06:07,928 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9f5ff4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:06:08,387 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-27 16:06:08,403 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-27 16:06:08,406 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-27 16:06:08,621 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-27 16:06:08,621 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 3675 ms
2018-06-27 16:06:09,191 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 16:06:09,193 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 16:06:09,198 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-27 16:06:09,199 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 16:06:09,200 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 16:06:09,200 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 16:06:09,200 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 16:06:09,200 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-27 16:06:09,201 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 16:06:09,202 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-27 16:06:09,202 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-27 16:06:09,672 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-27 16:06:10,671 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7c3c453b: startup date [Wed Jun 27 16:06:10 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a9950f1
2018-06-27 16:06:10,696 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:06:10,984 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:06:11,513 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@517fbf62: startup date [Wed Jun 27 16:06:11 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a9950f1
2018-06-27 16:06:11,554 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:06:13,023 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:06:13,023 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:06:13,029 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:06:13,029 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:06:13,277 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a9950f1: startup date [Wed Jun 27 16:06:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@600b9d27
2018-06-27 16:06:13,450 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:06:13,451 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:06:13,452 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:06:13,453 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:06:13,454 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:06:13,456 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:06:13,457 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:06:13,458 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-27 16:06:13,458 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:06:13,459 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:06:13,459 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:06:13,459 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:06:13,460 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:06:13,461 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:06:13,461 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:06:13,462 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:06:13,462 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:06:13,463 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:06:13,464 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:06:13,465 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:06:13,465 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:06:13,466 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:06:13,467 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:06:13,469 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-27 16:06:13,469 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 16:06:13,538 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:06:13,539 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:06:13,572 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-27 16:06:13,614 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:06:14,594 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:06:14,595 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-27 16:06:14,596 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:06:14,597 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:06:14,597 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:06:14,598 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-27 16:06:14,599 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-27 16:06:14,599 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:06:14,601 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 16:06:14,603 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:06:14,605 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:06:14,606 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:06:14,608 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:06:14,610 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-27 16:06:14,611 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-27 16:06:14,612 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-27 16:06:14,613 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:06:14,616 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-27 16:06:14,617 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:06:14,617 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:06:14,618 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-27 16:06:14,619 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:06:14,619 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-27 16:06:14,620 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-27 16:06:14,620 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:06:14,623 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:06:14,624 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:06:14,625 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-27 16:06:14,626 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:06:15,291 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-27 16:06:15,292 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 16:06:15,301 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-27 16:06:15,304 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-27 16:06:15,304 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-27 16:06:15,305 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-27 16:06:15,305 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-27 16:06:15,306 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-27 16:06:15,309 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-27 16:06:15,322 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-27 16:06:15,333 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-27 16:06:15,339 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-27 16:06:15,350 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6a9950f1,type=ConfigurationPropertiesRebinder]
2018-06-27 16:06:15,354 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 16:06:15,355 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-27 16:06:15,715 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:06:15,719 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=d4a29f05-937b-4282-90a4-a62801f85599, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-27 16:06:15,720 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-27 16:06:15,720 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-27 16:06:15,802 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-27 16:06:15,810 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-27 16:06:15,851 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-27 16:06:15,907 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-27 16:06:15,908 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-27 16:06:16,039 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-27 16:06:16,039 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-27 16:06:16,327 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:06:16,424 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-27 16:06:16,425 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-27 16:06:16,425 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-27 16:06:16,425 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-27 16:06:16,425 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-27 16:06:16,426 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-27 16:06:16,426 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-27 16:06:16,601 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-27 16:06:16,603 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-27 16:06:16,606 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-27 16:06:16,612 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1530086776612 with initial instances count: 2
2018-06-27 16:06:16,639 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-27 16:06:16,640 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1530086776640, current=UP, previous=STARTING]
2018-06-27 16:06:16,646 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-27 16:06:16,691 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-27 16:06:16,817 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-27 16:06:16,819 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-27 16:06:16,826 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 14.16 seconds (JVM running for 16.812)
2018-06-27 16:06:19,041 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 16:06:19,041 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 16:06:19,069 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-06-27 16:06:19,564 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-27 16:09:32,815 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-27 16:09:32,844 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1ad8df52: startup date [Wed Jun 27 16:09:32 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@177bea38
2018-06-27 16:09:34,100 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:09:34,102 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:09:34,463 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-27 16:09:34,726 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 16:09:35,334 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-27 16:09:35,399 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:09:35,484 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:09:35,485 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:09:35,599 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6663fba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:09:35,652 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$cee7242a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:09:35,668 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4399979] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:09:35,722 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$1d4bcf97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:09:35,783 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f0539c76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:09:36,296 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-27 16:09:36,323 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-27 16:09:36,324 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-27 16:09:36,844 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-27 16:09:36,844 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 4000 ms
2018-06-27 16:09:37,644 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 16:09:37,646 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 16:09:37,650 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-27 16:09:37,650 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 16:09:37,650 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 16:09:37,651 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 16:09:37,651 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 16:09:37,651 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-27 16:09:37,651 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 16:09:37,652 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-27 16:09:37,652 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-27 16:09:38,648 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-27 16:09:39,542 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1d7c9811: startup date [Wed Jun 27 16:09:39 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1ad8df52
2018-06-27 16:09:39,574 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:09:39,874 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:09:40,470 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7c956dda: startup date [Wed Jun 27 16:09:40 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1ad8df52
2018-06-27 16:09:40,497 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:09:41,804 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:09:41,805 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:09:41,814 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:09:41,814 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:09:42,090 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1ad8df52: startup date [Wed Jun 27 16:09:32 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@177bea38
2018-06-27 16:09:42,435 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:09:42,437 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:09:42,441 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:09:42,442 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:09:42,444 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:09:42,446 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:09:42,446 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:09:42,447 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-27 16:09:42,448 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:09:42,449 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:09:42,449 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:09:42,450 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:09:42,450 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:09:42,451 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:09:42,451 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:09:42,452 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:09:42,452 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:09:42,453 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:09:42,454 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:09:42,455 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:09:42,455 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:09:42,461 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:09:42,469 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:09:42,477 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-27 16:09:42,478 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 16:09:42,544 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:09:42,545 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:09:42,578 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-27 16:09:42,617 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:09:43,671 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-27 16:09:43,671 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-27 16:09:43,672 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-27 16:09:43,673 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:09:43,674 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:09:43,676 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-27 16:09:43,677 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:09:43,678 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-27 16:09:43,679 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-27 16:09:43,679 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-27 16:09:43,679 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:09:43,680 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-27 16:09:43,680 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:09:43,680 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:09:43,682 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-27 16:09:43,682 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:09:43,683 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:09:43,683 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:09:43,684 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:09:43,685 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-27 16:09:43,685 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:09:43,686 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:09:43,687 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 16:09:43,688 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:09:43,688 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:09:43,689 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-27 16:09:43,690 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:09:43,691 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:09:43,692 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:09:44,235 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-27 16:09:44,236 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 16:09:44,246 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-27 16:09:44,249 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-27 16:09:44,250 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-27 16:09:44,250 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-27 16:09:44,251 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-27 16:09:44,252 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-27 16:09:44,254 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-27 16:09:44,269 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-27 16:09:44,281 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-27 16:09:44,287 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-27 16:09:44,299 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1ad8df52,type=ConfigurationPropertiesRebinder]
2018-06-27 16:09:44,303 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 16:09:44,305 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-27 16:09:44,661 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:09:44,665 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=d97247bb-d2e7-44ba-b0ba-162edaa1d7fb, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-27 16:09:44,666 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-27 16:09:44,666 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-27 16:09:44,745 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-27 16:09:44,752 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-27 16:09:44,789 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-27 16:09:44,843 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-27 16:09:44,843 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-27 16:09:44,951 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-27 16:09:44,951 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-27 16:09:45,235 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:09:45,328 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-27 16:09:45,329 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-27 16:09:45,329 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-27 16:09:45,329 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-27 16:09:45,329 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-27 16:09:45,330 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-27 16:09:45,330 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-27 16:09:45,527 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-27 16:09:45,530 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-27 16:09:45,534 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-27 16:09:45,537 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1530086985537 with initial instances count: 2
2018-06-27 16:09:45,569 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-27 16:09:45,569 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1530086985569, current=UP, previous=STARTING]
2018-06-27 16:09:45,571 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-27 16:09:45,609 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-27 16:09:45,709 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-27 16:09:45,710 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-27 16:09:45,715 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 14.934 seconds (JVM running for 16.318)
2018-06-27 16:09:48,875 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-27 16:10:40,002 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 16:10:40,002 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 16:10:40,027 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2018-06-27 16:14:45,333 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:19:45,334 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:20:04,928 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-27 16:20:04,951 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38eb2c50: startup date [Wed Jun 27 16:20:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@32a68f4f
2018-06-27 16:20:06,382 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:20:06,384 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:20:06,644 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-27 16:20:06,873 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 16:20:07,333 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-27 16:20:07,392 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:20:07,462 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:20:07,472 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:20:07,588 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$42a72a6d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:20:07,635 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$b280edd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:20:07,649 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$107a842c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:20:07,703 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$598cba4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:20:07,764 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2c948729] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:20:08,462 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-27 16:20:08,535 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-27 16:20:08,548 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-27 16:20:08,810 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-27 16:20:08,811 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 3860 ms
2018-06-27 16:20:09,502 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 16:20:09,504 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 16:20:09,510 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-27 16:20:09,510 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 16:20:09,511 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 16:20:09,511 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 16:20:09,512 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 16:20:09,513 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-27 16:20:09,513 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 16:20:09,513 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-27 16:20:09,513 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-27 16:20:09,981 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-27 16:20:10,889 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@12c76d6e: startup date [Wed Jun 27 16:20:10 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38eb2c50
2018-06-27 16:20:10,917 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:20:11,212 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:20:11,581 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@686b1e2d: startup date [Wed Jun 27 16:20:11 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38eb2c50
2018-06-27 16:20:11,602 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:20:12,649 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:20:12,650 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:20:12,656 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:20:12,657 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:20:12,904 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38eb2c50: startup date [Wed Jun 27 16:20:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@32a68f4f
2018-06-27 16:20:13,035 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:20:13,037 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:20:13,037 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:20:13,038 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:20:13,038 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:20:13,038 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:20:13,039 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:20:13,039 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:20:13,040 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:20:13,040 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:20:13,040 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:20:13,041 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:20:13,042 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:20:13,042 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:20:13,043 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-27 16:20:13,043 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:20:13,043 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:20:13,044 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:20:13,045 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:20:13,045 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:20:13,046 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:20:13,046 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:20:13,047 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:20:13,049 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-27 16:20:13,050 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 16:20:13,106 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:20:13,106 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:20:13,136 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-27 16:20:13,181 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:20:14,296 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-27 16:20:14,298 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-27 16:20:14,298 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:20:14,299 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:20:14,299 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-27 16:20:14,300 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:20:14,301 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-27 16:20:14,302 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:20:14,303 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:20:14,304 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-27 16:20:14,305 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:20:14,305 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:20:14,306 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:20:14,306 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:20:14,307 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-27 16:20:14,307 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:20:14,308 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:20:14,310 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:20:14,311 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:20:14,311 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:20:14,312 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-27 16:20:14,312 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-27 16:20:14,312 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:20:14,313 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-27 16:20:14,314 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 16:20:14,315 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:20:14,315 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:20:14,316 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-27 16:20:14,317 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-27 16:20:15,165 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-27 16:20:15,167 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 16:20:15,179 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-27 16:20:15,182 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-27 16:20:15,183 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-27 16:20:15,184 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-27 16:20:15,185 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-27 16:20:15,185 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-27 16:20:15,189 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-27 16:20:15,205 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-27 16:20:15,223 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-27 16:20:15,233 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-27 16:20:15,253 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=38eb2c50,type=ConfigurationPropertiesRebinder]
2018-06-27 16:20:15,261 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 16:20:15,264 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-27 16:20:15,969 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:20:15,987 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=ec14a905-c0a6-4e00-96da-4c18cfc1ead4, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-27 16:20:15,990 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-27 16:20:15,991 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-27 16:20:16,104 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-27 16:20:16,116 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-27 16:20:16,173 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-27 16:20:16,295 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-27 16:20:16,297 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-27 16:20:16,466 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-27 16:20:16,466 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-27 16:20:16,888 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:20:17,032 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-27 16:20:17,034 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-27 16:20:17,034 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-27 16:20:17,034 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-27 16:20:17,034 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-27 16:20:17,035 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-27 16:20:17,035 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-27 16:20:17,320 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-27 16:20:17,331 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-27 16:20:17,337 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-27 16:20:17,345 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1530087617345 with initial instances count: 2
2018-06-27 16:20:17,377 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-27 16:20:17,377 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1530087617377, current=UP, previous=STARTING]
2018-06-27 16:20:17,381 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-27 16:20:17,416 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-27 16:20:17,552 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-27 16:20:17,554 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-27 16:20:17,564 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 14.995 seconds (JVM running for 17.007)
2018-06-27 16:20:20,094 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-27 16:20:20,260 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 16:20:20,260 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 16:20:20,303 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-06-27 16:20:20,982 INFO [com.xunyu.config.logs.GlobalExceptionHandler:43] GlobalExceptionHandler,捕获异常:nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 7;eString:org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 7
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl.selectConfigListCount(GatewayOutConfigDaoImpl.java:55)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl$$FastClassBySpringCGLIB$$a0bf756e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl$$EnhancerBySpringCGLIB$$efd92c6d.selectConfigListCount(<generated>)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl.selectConfigListCount(GatewayOutConfigServiceImpl.java:85)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl$$FastClassBySpringCGLIB$$cf994634.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:669)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl$$EnhancerBySpringCGLIB$$db8a3e2a.selectConfigListCount(<generated>)
	at com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(GatewayOutConfigController.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.xunyu.config.filter.SessionFilter.doFilter(SessionFilter.java:35)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 7
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 89 more

2018-06-27 16:23:58,269 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-27 16:23:58,287 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@253b380a: startup date [Wed Jun 27 16:23:58 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7a220c9a
2018-06-27 16:23:59,191 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:23:59,193 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:23:59,431 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-27 16:23:59,580 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 16:23:59,869 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-27 16:23:59,908 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:23:59,963 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:23:59,964 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:24:00,030 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$9cd1211f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:24:00,050 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$6552058f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:24:00,062 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6aa47ade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:24:00,111 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$b3b6b0fc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:24:00,164 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$86be7ddb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:24:00,556 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-27 16:24:00,567 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-27 16:24:00,568 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-27 16:24:00,728 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-27 16:24:00,728 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2441 ms
2018-06-27 16:24:01,096 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 16:24:01,097 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 16:24:01,101 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-27 16:24:01,102 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 16:24:01,102 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 16:24:01,102 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 16:24:01,102 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 16:24:01,103 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-27 16:24:01,103 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 16:24:01,103 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-27 16:24:01,103 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-27 16:24:01,398 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-27 16:24:01,970 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@171aa66: startup date [Wed Jun 27 16:24:01 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@253b380a
2018-06-27 16:24:01,992 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:24:02,208 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:24:02,483 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@305e95a4: startup date [Wed Jun 27 16:24:02 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@253b380a
2018-06-27 16:24:02,501 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:24:03,421 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:24:03,422 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:24:03,427 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:24:03,427 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:24:03,600 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@253b380a: startup date [Wed Jun 27 16:23:58 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7a220c9a
2018-06-27 16:24:03,715 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:24:03,717 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:24:03,717 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:24:03,718 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:24:03,718 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:24:03,718 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:24:03,719 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:24:03,719 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:24:03,719 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:24:03,719 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:24:03,720 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:24:03,720 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:24:03,721 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:24:03,721 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:24:03,722 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:24:03,722 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-27 16:24:03,722 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:24:03,723 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:24:03,724 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:24:03,724 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:24:03,726 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:24:03,726 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:24:03,727 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:24:03,729 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-27 16:24:03,730 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 16:24:03,773 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:24:03,773 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:24:03,797 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-27 16:24:03,825 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:24:04,709 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:24:04,710 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:24:04,710 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:24:04,711 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:24:04,712 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:24:04,712 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-27 16:24:04,714 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-27 16:24:04,715 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-27 16:24:04,715 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:24:04,716 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-27 16:24:04,718 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 16:24:04,719 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:24:04,721 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-27 16:24:04,721 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:24:04,722 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:24:04,723 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-27 16:24:04,723 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:24:04,723 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:24:04,724 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:24:04,725 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-27 16:24:04,726 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-27 16:24:04,726 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:24:04,727 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:24:04,727 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:24:04,728 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:24:04,728 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-27 16:24:04,729 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:24:04,729 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-27 16:24:04,730 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-27 16:24:05,260 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-27 16:24:05,261 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 16:24:05,270 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-27 16:24:05,273 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-27 16:24:05,273 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-27 16:24:05,274 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-27 16:24:05,275 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-27 16:24:05,275 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-27 16:24:05,278 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-27 16:24:05,290 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-27 16:24:05,301 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-27 16:24:05,306 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-27 16:24:05,316 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=253b380a,type=ConfigurationPropertiesRebinder]
2018-06-27 16:24:05,320 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 16:24:05,322 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-27 16:24:05,666 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:24:05,671 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=65f4c289-c13e-423c-bc24-2926aa909d15, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-27 16:24:05,671 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-27 16:24:05,672 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-27 16:24:05,751 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-27 16:24:05,760 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-27 16:24:05,794 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-27 16:24:05,852 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-27 16:24:05,852 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-27 16:24:05,967 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-27 16:24:05,967 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-27 16:24:06,218 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:24:06,307 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-27 16:24:06,307 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-27 16:24:06,307 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-27 16:24:06,308 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-27 16:24:06,308 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-27 16:24:06,308 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-27 16:24:06,308 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-27 16:24:06,442 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-27 16:24:06,444 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-27 16:24:06,447 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-27 16:24:06,449 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1530087846449 with initial instances count: 2
2018-06-27 16:24:06,473 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-27 16:24:06,473 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1530087846473, current=UP, previous=STARTING]
2018-06-27 16:24:06,475 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-27 16:24:06,511 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-27 16:24:06,585 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-27 16:24:06,586 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-27 16:24:06,590 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 9.989 seconds (JVM running for 11.473)
2018-06-27 16:24:08,928 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-27 16:29:06,311 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:33:02,431 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 16:33:02,431 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 16:33:02,461 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-06-27 16:33:47,845 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-27 16:33:47,883 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6b667cb3: startup date [Wed Jun 27 16:33:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@177bea38
2018-06-27 16:33:48,767 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:33:48,768 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:33:48,944 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-27 16:33:49,120 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 16:33:49,468 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-27 16:33:49,509 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:33:49,556 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:33:49,558 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:33:49,620 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$45400135] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:33:49,642 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$dc0e5a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:33:49,653 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$13135af4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:33:49,692 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$5c259112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:33:49,747 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2f2d5df1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:33:50,202 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-27 16:33:50,216 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-27 16:33:50,218 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-27 16:33:50,429 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-27 16:33:50,430 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2547 ms
2018-06-27 16:33:51,127 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 16:33:51,129 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 16:33:51,135 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-27 16:33:51,136 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 16:33:51,137 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 16:33:51,137 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 16:33:51,138 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 16:33:51,138 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-27 16:33:51,138 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 16:33:51,138 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-27 16:33:51,139 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-27 16:33:51,992 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-27 16:33:53,000 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@b5de9ac: startup date [Wed Jun 27 16:33:53 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6b667cb3
2018-06-27 16:33:53,033 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:33:53,360 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:33:53,859 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@52856ff9: startup date [Wed Jun 27 16:33:53 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6b667cb3
2018-06-27 16:33:53,889 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:33:55,838 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:33:55,838 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:33:55,845 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:33:55,846 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:33:56,197 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6b667cb3: startup date [Wed Jun 27 16:33:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@177bea38
2018-06-27 16:33:56,356 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:33:56,363 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:33:56,364 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:33:56,364 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:33:56,364 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:33:56,365 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:33:56,367 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:33:56,368 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:33:56,368 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:33:56,368 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:33:56,369 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-27 16:33:56,369 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:33:56,370 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:33:56,370 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:33:56,371 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:33:56,371 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:33:56,372 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:33:56,372 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:33:56,374 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:33:56,376 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:33:56,376 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:33:56,378 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:33:56,380 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:33:56,383 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-27 16:33:56,384 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 16:33:56,456 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:33:56,457 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:33:56,505 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-27 16:33:56,551 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:33:58,092 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-27 16:33:58,094 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-27 16:33:58,094 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:33:58,096 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 16:33:58,096 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:33:58,097 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:33:58,099 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-27 16:33:58,100 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:33:58,101 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:33:58,102 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-27 16:33:58,103 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-27 16:33:58,103 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:33:58,104 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-27 16:33:58,104 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:33:58,106 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-27 16:33:58,107 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:33:58,108 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:33:58,109 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:33:58,110 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:33:58,115 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-27 16:33:58,117 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:33:58,117 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:33:58,119 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-27 16:33:58,119 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:33:58,120 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-27 16:33:58,124 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:33:58,124 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-27 16:33:58,125 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:33:58,125 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:33:58,764 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-27 16:33:58,766 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 16:33:58,778 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-27 16:33:58,781 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-27 16:33:58,782 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-27 16:33:58,783 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-27 16:33:58,786 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-27 16:33:58,788 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-27 16:33:58,796 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-27 16:33:58,811 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-27 16:33:58,823 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-27 16:33:58,832 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-27 16:33:58,846 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6b667cb3,type=ConfigurationPropertiesRebinder]
2018-06-27 16:33:58,852 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 16:33:58,854 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-27 16:33:59,261 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:33:59,270 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=34519538-d8d7-4505-a305-b9bde2de4e0e, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-27 16:33:59,271 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-27 16:33:59,272 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-27 16:33:59,362 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-27 16:33:59,373 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-27 16:33:59,420 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-27 16:33:59,492 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-27 16:33:59,493 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-27 16:33:59,640 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-27 16:33:59,640 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-27 16:33:59,970 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:34:00,220 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-27 16:34:00,221 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-27 16:34:00,222 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-27 16:34:00,222 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-27 16:34:00,222 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-27 16:34:00,223 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-27 16:34:00,223 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-27 16:34:00,378 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-27 16:34:00,380 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-27 16:34:00,382 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-27 16:34:00,385 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1530088440385 with initial instances count: 2
2018-06-27 16:34:00,410 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-27 16:34:00,410 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1530088440410, current=UP, previous=STARTING]
2018-06-27 16:34:00,412 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-27 16:34:00,450 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-27 16:34:00,550 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-27 16:34:00,552 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-27 16:34:00,556 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 15.198 seconds (JVM running for 16.635)
2018-06-27 16:34:03,189 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-27 16:34:03,305 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 16:34:03,306 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 16:34:03,339 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-06-27 16:39:00,227 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:44:00,229 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:49:00,231 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:53:08,269 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-27 16:53:08,289 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f6d27cc: startup date [Wed Jun 27 16:53:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ee86bcb
2018-06-27 16:53:09,059 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:53:09,060 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:53:09,219 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-27 16:53:09,369 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 16:53:09,636 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-27 16:53:09,675 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:53:09,720 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:09,721 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:09,780 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6c30b67b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:09,801 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$34b19aeb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:09,810 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3a04103a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:09,845 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$83164658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:09,901 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$561e1337] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:10,232 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-27 16:53:10,259 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-27 16:53:10,260 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-27 16:53:10,408 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-27 16:53:10,409 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2120 ms
2018-06-27 16:53:10,795 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 16:53:10,796 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 16:53:10,801 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-27 16:53:10,802 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 16:53:10,802 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 16:53:10,802 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 16:53:10,802 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 16:53:10,802 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-27 16:53:10,803 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 16:53:10,803 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-27 16:53:10,803 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-27 16:53:11,099 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-27 16:53:11,800 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@78545d40: startup date [Wed Jun 27 16:53:11 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f6d27cc
2018-06-27 16:53:11,817 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:53:12,055 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:53:12,373 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5fe5c68b: startup date [Wed Jun 27 16:53:12 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f6d27cc
2018-06-27 16:53:12,390 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:53:13,540 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:53:13,540 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:53:13,545 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:53:13,545 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:53:13,725 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f6d27cc: startup date [Wed Jun 27 16:53:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ee86bcb
2018-06-27 16:53:13,832 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:53:13,833 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:53:13,833 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:53:13,834 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:53:13,834 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:53:13,834 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:53:13,837 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:53:13,837 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:53:13,838 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:53:13,838 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:53:13,838 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:53:13,839 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:53:13,839 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:53:13,840 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-27 16:53:13,840 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:53:13,840 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:53:13,841 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:53:13,841 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:53:13,842 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:53:13,842 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:53:13,843 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:53:13,843 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:53:13,844 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:53:13,846 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-27 16:53:13,846 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 16:53:13,888 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:53:13,889 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:53:13,914 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-27 16:53:13,943 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:53:14,753 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-27 16:53:14,755 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-27 16:53:14,755 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:53:14,755 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:53:14,756 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-27 16:53:14,758 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:53:14,758 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:53:14,759 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:53:14,759 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:53:14,760 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-27 16:53:14,760 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:53:14,761 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-27 16:53:14,762 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:53:14,762 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-27 16:53:14,762 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-27 16:53:14,763 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-27 16:53:14,763 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:53:14,764 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-27 16:53:14,764 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:53:14,765 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:53:14,766 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-27 16:53:14,766 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:53:14,766 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:53:14,767 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:53:14,768 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 16:53:14,770 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-27 16:53:14,770 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:53:14,770 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:53:14,771 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:53:15,324 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-27 16:53:15,327 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 16:53:15,336 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-27 16:53:15,339 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-27 16:53:15,340 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-27 16:53:15,341 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-27 16:53:15,341 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-27 16:53:15,342 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-27 16:53:15,345 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-27 16:53:15,358 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-27 16:53:15,368 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-27 16:53:15,374 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-27 16:53:15,386 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1f6d27cc,type=ConfigurationPropertiesRebinder]
2018-06-27 16:53:15,390 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 16:53:15,392 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-27 16:53:15,743 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:53:15,747 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=0e8d109f-26fd-4745-8ade-57f598097fd2, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-27 16:53:15,748 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-27 16:53:15,748 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-27 16:53:15,839 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-27 16:53:15,847 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-27 16:53:15,886 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-27 16:53:15,952 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-27 16:53:15,953 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-27 16:53:16,040 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-27 16:53:16,040 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-27 16:53:16,288 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:53:16,384 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-27 16:53:16,384 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-27 16:53:16,384 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-27 16:53:16,385 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-27 16:53:16,385 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-27 16:53:16,385 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-27 16:53:16,385 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-27 16:53:16,532 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-27 16:53:16,534 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-27 16:53:16,536 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-27 16:53:16,539 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1530089596539 with initial instances count: 2
2018-06-27 16:53:16,562 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-27 16:53:16,563 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1530089596563, current=UP, previous=STARTING]
2018-06-27 16:53:16,565 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-27 16:53:16,596 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-27 16:53:16,697 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-27 16:53:16,698 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-27 16:53:16,703 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 10.884 seconds (JVM running for 12.498)
2018-06-27 16:53:19,121 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-27 16:53:30,123 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 16:53:30,123 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 16:53:30,156 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2018-06-27 16:53:33,422 INFO [com.xunyu.config.logs.GlobalExceptionHandler:43] GlobalExceptionHandler,捕获异常:nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 7;eString:org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 7
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl.selectConfigListCount(GatewayOutConfigDaoImpl.java:56)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl$$FastClassBySpringCGLIB$$a0bf756e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl$$EnhancerBySpringCGLIB$$bfa82c10.selectConfigListCount(<generated>)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl.selectConfigListCount(GatewayOutConfigServiceImpl.java:86)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl$$FastClassBySpringCGLIB$$cf994634.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:669)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl$$EnhancerBySpringCGLIB$$26017d35.selectConfigListCount(<generated>)
	at com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(GatewayOutConfigController.java:256)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.xunyu.config.filter.SessionFilter.doFilter(SessionFilter.java:35)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 7
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 89 more

2018-06-27 16:53:55,241 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-27 16:53:55,261 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a22ad2b: startup date [Wed Jun 27 16:53:55 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d167f58
2018-06-27 16:53:56,104 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:53:56,105 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:53:56,293 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-27 16:53:56,469 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 16:53:56,769 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-27 16:53:56,807 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:53:56,852 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:56,853 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:56,917 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$2fac33cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:56,942 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$f82d183b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:56,953 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fd7f8d8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:57,006 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$4691c3a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:57,055 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$19999087] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:53:57,433 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-27 16:53:57,445 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-27 16:53:57,446 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-27 16:53:57,608 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-27 16:53:57,609 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2348 ms
2018-06-27 16:53:58,015 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 16:53:58,016 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 16:53:58,021 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-27 16:53:58,021 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 16:53:58,022 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 16:53:58,022 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 16:53:58,022 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 16:53:58,023 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-27 16:53:58,023 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 16:53:58,023 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-27 16:53:58,023 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-27 16:53:58,335 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-27 16:53:58,971 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5486ee92: startup date [Wed Jun 27 16:53:58 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a22ad2b
2018-06-27 16:53:58,993 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:53:59,218 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:53:59,527 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@9e50283: startup date [Wed Jun 27 16:53:59 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a22ad2b
2018-06-27 16:53:59,545 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:54:00,628 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:54:00,628 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:54:00,633 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:54:00,633 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:54:00,864 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a22ad2b: startup date [Wed Jun 27 16:53:55 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d167f58
2018-06-27 16:54:00,978 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:54:00,979 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:00,980 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:54:00,980 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:00,980 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:00,983 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:54:00,984 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:00,984 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:00,985 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:00,985 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:00,986 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-27 16:54:00,986 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:00,986 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:00,987 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:00,987 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:54:00,987 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:00,988 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:00,988 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:54:00,989 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:54:00,990 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:54:00,990 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:54:00,991 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:54:00,991 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:54:00,994 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-27 16:54:00,995 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 16:54:01,037 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:54:01,038 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:54:01,062 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-27 16:54:01,096 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:54:01,972 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-27 16:54:01,973 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-27 16:54:01,973 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-27 16:54:01,975 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 16:54:01,975 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:54:01,976 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-27 16:54:01,976 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:01,977 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-27 16:54:01,977 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:01,978 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:01,978 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:01,978 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:01,979 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-27 16:54:01,979 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:01,980 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:54:01,981 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-27 16:54:01,981 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:54:01,982 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-27 16:54:01,982 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:01,983 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:01,983 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:01,984 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-27 16:54:01,985 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:01,986 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-27 16:54:01,986 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:54:01,987 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:01,988 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-27 16:54:01,989 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:01,989 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:54:02,538 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-27 16:54:02,539 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 16:54:02,552 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-27 16:54:02,556 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-27 16:54:02,557 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-27 16:54:02,557 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-27 16:54:02,558 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-27 16:54:02,560 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-27 16:54:02,563 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-27 16:54:02,585 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-27 16:54:02,597 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-27 16:54:02,607 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-27 16:54:02,620 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2a22ad2b,type=ConfigurationPropertiesRebinder]
2018-06-27 16:54:02,631 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 16:54:02,633 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-27 16:54:03,086 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:54:03,092 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=6b84df75-cd6f-4929-93f0-53da8eae6ee3, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-27 16:54:03,093 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-27 16:54:03,093 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-27 16:54:03,182 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-27 16:54:03,194 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-27 16:54:03,244 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-27 16:54:03,326 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-27 16:54:03,327 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-27 16:54:03,447 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-27 16:54:03,447 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-27 16:54:03,756 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:54:03,864 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-27 16:54:03,865 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-27 16:54:03,865 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-27 16:54:03,865 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-27 16:54:03,866 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-27 16:54:03,866 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-27 16:54:03,866 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-27 16:54:04,118 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-27 16:54:04,122 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-27 16:54:04,125 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-27 16:54:04,129 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1530089644128 with initial instances count: 2
2018-06-27 16:54:04,153 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-27 16:54:04,154 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1530089644154, current=UP, previous=STARTING]
2018-06-27 16:54:04,156 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-27 16:54:04,188 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-27 16:54:04,290 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-27 16:54:04,291 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-27 16:54:04,315 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 11.243 seconds (JVM running for 13.084)
2018-06-27 16:54:06,967 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-27 16:54:22,388 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-27 16:54:22,408 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@408b87aa: startup date [Wed Jun 27 16:54:22 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@29a0cdb
2018-06-27 16:54:23,262 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:54:23,263 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:54:23,408 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-27 16:54:23,547 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 16:54:23,854 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-27 16:54:23,895 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:54:23,943 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:54:23,945 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:54:24,004 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$7298bf73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:54:24,025 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$3b19a3e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:54:24,036 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$406c1932] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:54:24,071 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$897e4f50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:54:24,132 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5c861c2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:54:24,478 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-27 16:54:24,488 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-27 16:54:24,489 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-27 16:54:24,640 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-27 16:54:24,640 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2232 ms
2018-06-27 16:54:25,001 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 16:54:25,002 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 16:54:25,006 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-27 16:54:25,007 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 16:54:25,007 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 16:54:25,008 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 16:54:25,008 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 16:54:25,008 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-27 16:54:25,008 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 16:54:25,008 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-27 16:54:25,008 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-27 16:54:25,286 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-27 16:54:25,849 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@59baf2c7: startup date [Wed Jun 27 16:54:25 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@408b87aa
2018-06-27 16:54:25,865 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:54:26,093 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:54:26,457 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@687b0ddc: startup date [Wed Jun 27 16:54:26 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@408b87aa
2018-06-27 16:54:26,472 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:54:27,330 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:54:27,331 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:54:27,337 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:54:27,338 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:54:27,514 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@408b87aa: startup date [Wed Jun 27 16:54:22 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@29a0cdb
2018-06-27 16:54:27,629 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:27,630 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:27,631 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:27,631 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:27,631 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:27,632 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:54:27,633 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-27 16:54:27,633 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:54:27,634 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:27,634 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:27,634 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:54:27,635 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:27,635 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:54:27,636 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:27,636 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:54:27,637 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:27,637 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:27,637 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:54:27,639 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:54:27,639 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:54:27,639 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:54:27,640 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:54:27,641 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:54:27,644 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-27 16:54:27,644 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 16:54:27,688 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:54:27,689 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:54:27,715 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-27 16:54:27,742 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:54:28,573 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:54:28,573 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:54:28,574 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:28,574 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:28,575 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:28,575 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-27 16:54:28,578 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-27 16:54:28,578 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-27 16:54:28,579 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:28,580 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:28,580 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-27 16:54:28,581 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:28,582 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-27 16:54:28,582 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-27 16:54:28,583 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:28,584 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-27 16:54:28,584 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:28,585 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 16:54:28,587 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-27 16:54:28,587 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:28,588 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:28,589 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-27 16:54:28,590 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:54:28,590 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:28,590 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:54:28,592 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-27 16:54:28,592 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:54:28,593 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:54:28,593 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-27 16:54:29,116 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-27 16:54:29,117 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 16:54:29,126 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-27 16:54:29,130 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-27 16:54:29,131 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-27 16:54:29,132 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-27 16:54:29,133 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-27 16:54:29,134 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-27 16:54:29,136 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-27 16:54:29,149 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-27 16:54:29,160 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-27 16:54:29,165 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-27 16:54:29,177 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=408b87aa,type=ConfigurationPropertiesRebinder]
2018-06-27 16:54:29,181 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 16:54:29,183 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-27 16:54:29,545 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:54:29,551 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=0ac6482f-1d6d-4906-8d17-c592a499070a, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-27 16:54:29,551 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-27 16:54:29,551 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-27 16:54:29,629 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-27 16:54:29,636 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-27 16:54:29,672 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-27 16:54:29,727 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-27 16:54:29,728 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-27 16:54:29,824 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-27 16:54:29,825 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-27 16:54:30,091 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:54:30,181 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-27 16:54:30,181 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-27 16:54:30,181 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-27 16:54:30,181 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-27 16:54:30,181 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-27 16:54:30,182 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-27 16:54:30,182 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-27 16:54:30,322 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-27 16:54:30,324 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-27 16:54:30,328 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-27 16:54:30,331 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1530089670331 with initial instances count: 2
2018-06-27 16:54:30,353 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-27 16:54:30,354 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1530089670354, current=UP, previous=STARTING]
2018-06-27 16:54:30,355 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-27 16:54:30,388 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-27 16:54:30,467 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-27 16:54:30,467 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-27 16:54:30,472 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 10.536 seconds (JVM running for 12.052)
2018-06-27 16:54:32,957 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-27 16:54:52,728 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 16:54:52,728 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 16:54:52,757 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-06-27 16:54:53,240 INFO [com.xunyu.config.logs.GlobalExceptionHandler:43] GlobalExceptionHandler,捕获异常:nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 7;eString:org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 7
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl.selectConfigListCount(GatewayOutConfigDaoImpl.java:56)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl$$FastClassBySpringCGLIB$$a0bf756e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl$$EnhancerBySpringCGLIB$$386992f1.selectConfigListCount(<generated>)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl.selectConfigListCount(GatewayOutConfigServiceImpl.java:86)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl$$FastClassBySpringCGLIB$$cf994634.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:669)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl$$EnhancerBySpringCGLIB$$3e045ab9.selectConfigListCount(<generated>)
	at com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(GatewayOutConfigController.java:256)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.xunyu.config.filter.SessionFilter.doFilter(SessionFilter.java:35)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 7
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 89 more

2018-06-27 16:58:32,300 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-27 16:58:32,324 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3b0ee03a: startup date [Wed Jun 27 16:58:32 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68df9280
2018-06-27 16:58:33,273 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:58:33,274 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-27 16:58:33,429 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-27 16:58:33,657 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 16:58:34,100 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-27 16:58:34,147 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:58:34,198 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:58:34,199 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:58:34,266 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$90bf55b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:58:34,286 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$59403a27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:58:34,297 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5e92af76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:58:34,335 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$a7a4e594] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:58:34,385 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7aacb273] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 16:58:34,710 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-27 16:58:34,720 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-27 16:58:34,722 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-27 16:58:34,882 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-27 16:58:34,882 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2558 ms
2018-06-27 16:58:35,247 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 16:58:35,249 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 16:58:35,253 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-27 16:58:35,253 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 16:58:35,253 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 16:58:35,254 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 16:58:35,254 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 16:58:35,255 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-27 16:58:35,255 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 16:58:35,255 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-27 16:58:35,256 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-27 16:58:35,543 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-27 16:58:36,125 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@451816fd: startup date [Wed Jun 27 16:58:36 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3b0ee03a
2018-06-27 16:58:36,143 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:58:36,364 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:58:36,638 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@148ab138: startup date [Wed Jun 27 16:58:36 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3b0ee03a
2018-06-27 16:58:36,653 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-27 16:58:37,519 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:58:37,519 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:58:37,524 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-27 16:58:37,524 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-27 16:58:37,697 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3b0ee03a: startup date [Wed Jun 27 16:58:32 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@68df9280
2018-06-27 16:58:37,816 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:58:37,818 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:58:37,819 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:58:37,819 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:58:37,820 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-27 16:58:37,820 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:58:37,820 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:58:37,821 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:58:37,821 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:58:37,821 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:58:37,822 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:58:37,822 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-27 16:58:37,822 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:58:37,823 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:58:37,823 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:58:37,824 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:58:37,824 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:58:37,824 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-27 16:58:37,825 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:58:37,826 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:58:37,828 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:58:37,829 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-27 16:58:37,830 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-27 16:58:37,832 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-27 16:58:37,833 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 16:58:37,877 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:58:37,878 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:58:37,902 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-27 16:58:37,930 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 16:58:38,719 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:58:38,720 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-27 16:58:38,721 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:58:38,721 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-27 16:58:38,721 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-27 16:58:38,722 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:58:38,722 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:58:38,723 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-27 16:58:38,723 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:58:38,724 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:58:38,726 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-27 16:58:38,726 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:58:38,726 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:58:38,727 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:58:38,727 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:58:38,729 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-27 16:58:38,729 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-27 16:58:38,729 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:58:38,730 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-27 16:58:38,731 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-27 16:58:38,733 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-27 16:58:38,734 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:58:38,735 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 16:58:38,736 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-27 16:58:38,736 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:58:38,737 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:58:38,737 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-27 16:58:38,737 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-27 16:58:38,738 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-27 16:58:39,493 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-27 16:58:39,494 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 16:58:39,502 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-27 16:58:39,505 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-27 16:58:39,506 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-27 16:58:39,506 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-27 16:58:39,507 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-27 16:58:39,508 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-27 16:58:39,511 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-27 16:58:39,524 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-27 16:58:39,536 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-27 16:58:39,541 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-27 16:58:39,553 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3b0ee03a,type=ConfigurationPropertiesRebinder]
2018-06-27 16:58:39,556 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 16:58:39,558 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-27 16:58:39,913 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-27 16:58:39,922 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=5f1819ab-b546-45c3-b061-845cb42ef72b, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-27 16:58:39,923 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-27 16:58:39,923 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-27 16:58:40,000 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-27 16:58:40,008 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-27 16:58:40,051 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-27 16:58:40,104 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-27 16:58:40,104 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-27 16:58:40,213 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-27 16:58:40,213 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-27 16:58:40,481 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-27 16:58:40,573 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-27 16:58:40,574 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-27 16:58:40,574 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-27 16:58:40,575 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-27 16:58:40,575 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-27 16:58:40,575 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-27 16:58:40,575 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-27 16:58:40,723 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-27 16:58:40,726 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-27 16:58:40,730 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-27 16:58:40,733 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1530089920733 with initial instances count: 2
2018-06-27 16:58:40,756 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-27 16:58:40,756 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1530089920756, current=UP, previous=STARTING]
2018-06-27 16:58:40,758 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-27 16:58:40,800 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-27 16:58:40,880 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-27 16:58:40,881 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-27 16:58:40,885 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 10.751 seconds (JVM running for 13.219)
2018-06-27 16:58:43,814 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-27 16:58:44,339 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 16:58:44,339 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 16:58:44,404 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
