2018-06-20 14:01:35,563 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-20 14:01:35,594 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5177e388: startup date [Wed Jun 20 14:01:35 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2b76ff4e
2018-06-20 14:01:36,566 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:01:36,567 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:01:36,758 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-20 14:01:36,946 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-20 14:01:37,346 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=f4379bae-222e-3e06-8ca4-e515cc7093a3
2018-06-20 14:01:37,398 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-20 14:01:37,529 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$de36ce63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:01:37,565 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$a6b7b2d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:01:37,579 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ac0a2822] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:01:37,625 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f51c5e40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:01:37,684 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c8242b1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:01:38,073 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-20 14:01:38,084 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-20 14:01:38,085 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-20 14:01:38,493 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-20 14:01:38,494 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2900 ms
2018-06-20 14:01:39,119 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-20 14:01:39,121 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-20 14:01:39,129 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-20 14:01:39,129 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-20 14:01:39,130 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-20 14:01:39,130 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-20 14:01:39,130 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-20 14:01:39,131 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-20 14:01:39,131 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-20 14:01:39,131 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-20 14:01:39,131 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-20 14:01:39,629 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-20 14:01:41,397 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:01:41,398 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:01:41,402 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:01:41,403 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:01:41,637 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:01:42,072 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5177e388: startup date [Wed Jun 20 14:01:35 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2b76ff4e
2018-06-20 14:01:42,216 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:01:42,218 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:01:42,219 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:01:42,220 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:01:42,220 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:01:42,220 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:01:42,222 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:01:42,222 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:01:42,223 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:01:42,223 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:01:42,224 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:01:42,225 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:01:42,226 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:01:42,226 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-20 14:01:42,227 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:01:42,228 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:01:42,228 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:01:42,229 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:01:42,230 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:01:42,231 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:01:42,231 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:01:42,232 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:01:42,234 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-20 14:01:42,234 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-20 14:01:42,290 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:01:42,290 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:01:42,329 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-20 14:01:42,397 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:01:43,439 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:01:43,440 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-20 14:01:43,441 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:01:43,443 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-20 14:01:43,444 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:01:43,445 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:01:43,445 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:01:43,446 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:01:43,446 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-20 14:01:43,447 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-20 14:01:43,448 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-20 14:01:43,449 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-20 14:01:43,450 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-20 14:01:43,452 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:01:43,455 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-20 14:01:43,457 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:01:43,459 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-20 14:01:43,460 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:01:43,461 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:01:43,462 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-20 14:01:43,463 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:01:43,463 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-20 14:01:43,465 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-20 14:01:43,466 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:01:43,466 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:01:43,467 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:01:43,467 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:01:43,468 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:01:43,468 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:01:44,956 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-20 14:01:44,959 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-20 14:01:44,998 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-20 14:01:45,021 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-20 14:01:45,024 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-20 14:01:45,025 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-20 14:01:45,028 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-20 14:01:45,029 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-20 14:01:45,034 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-20 14:01:45,052 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-20 14:01:45,071 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-20 14:01:45,085 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-20 14:01:45,105 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5177e388,type=ConfigurationPropertiesRebinder]
2018-06-20 14:01:45,117 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-20 14:01:45,121 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-20 14:01:45,455 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:01:45,460 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=464c747a-2b27-48b2-a207-25cd5a8c3d46, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-20 14:01:45,460 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-20 14:01:45,461 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-20 14:01:45,541 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-20 14:01:45,548 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-20 14:01:45,588 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-20 14:01:45,646 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-20 14:01:45,647 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-20 14:01:45,775 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-20 14:01:45,777 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-20 14:01:46,074 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:01:46,169 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-20 14:01:46,170 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-20 14:01:46,170 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-20 14:01:46,170 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-20 14:01:46,170 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-20 14:01:46,170 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-20 14:01:46,170 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-20 14:01:46,395 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-20 14:01:46,397 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-20 14:01:46,400 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-20 14:01:46,403 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529474506403 with initial instances count: 2
2018-06-20 14:01:46,426 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-20 14:01:46,426 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529474506426, current=UP, previous=STARTING]
2018-06-20 14:01:46,428 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-20 14:01:46,461 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-20 14:01:46,579 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-20 14:01:46,580 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-20 14:01:46,585 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 14.217 seconds (JVM running for 16.301)
2018-06-20 14:01:49,505 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-20 14:04:21,876 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-20 14:04:21,876 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-20 14:04:21,909 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2018-06-20 14:06:46,174 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:11:46,177 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:12:46,791 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-20 14:12:46,814 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6441c486: startup date [Wed Jun 20 14:12:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7a1234bf
2018-06-20 14:12:47,626 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:12:47,627 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:12:47,783 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-20 14:12:47,968 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-20 14:12:48,245 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=f4379bae-222e-3e06-8ca4-e515cc7093a3
2018-06-20 14:12:48,282 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-20 14:12:48,384 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$9fe2812] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:12:48,406 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$d27f0c82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:12:48,416 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d7d181d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:12:48,451 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$20e3b7ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:12:48,507 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f3eb84ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:12:48,964 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-20 14:12:48,973 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-20 14:12:48,975 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-20 14:12:49,107 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-20 14:12:49,108 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2295 ms
2018-06-20 14:12:49,582 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-20 14:12:49,583 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-20 14:12:49,587 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-20 14:12:49,588 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-20 14:12:49,588 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-20 14:12:49,588 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-20 14:12:49,588 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-20 14:12:49,589 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-20 14:12:49,589 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-20 14:12:49,589 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-20 14:12:49,589 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-20 14:12:49,880 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-20 14:12:51,880 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:12:51,881 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:12:51,885 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:12:51,885 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:12:52,124 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:12:52,451 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6441c486: startup date [Wed Jun 20 14:12:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7a1234bf
2018-06-20 14:12:52,564 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-20 14:12:52,566 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:12:52,566 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:12:52,567 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:12:52,567 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:12:52,568 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:12:52,569 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:12:52,569 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:12:52,570 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:12:52,570 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:12:52,570 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:12:52,571 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:12:52,571 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:12:52,571 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:12:52,572 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:12:52,572 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:12:52,572 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:12:52,574 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:12:52,574 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:12:52,575 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:12:52,575 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:12:52,576 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:12:52,578 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-20 14:12:52,578 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-20 14:12:52,621 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:12:52,622 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:12:52,647 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-20 14:12:52,681 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:12:53,713 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-20 14:12:53,714 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-20 14:12:53,714 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:12:53,715 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:12:53,715 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:12:53,717 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-20 14:12:53,719 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:12:53,720 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:12:53,720 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-20 14:12:53,721 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:12:53,722 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-20 14:12:53,723 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:12:53,723 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:12:53,724 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-20 14:12:53,724 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:12:53,724 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:12:53,725 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:12:53,725 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-20 14:12:53,725 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:12:53,726 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-20 14:12:53,727 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:12:53,728 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-20 14:12:53,729 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-20 14:12:53,730 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-20 14:12:53,730 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:12:53,731 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:12:53,731 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-20 14:12:53,731 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:12:53,732 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:12:54,400 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-20 14:12:54,403 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-20 14:12:54,416 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-20 14:12:54,419 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-20 14:12:54,419 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-20 14:12:54,420 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-20 14:12:54,421 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-20 14:12:54,422 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-20 14:12:54,425 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-20 14:12:54,439 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-20 14:12:54,451 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-20 14:12:54,457 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-20 14:12:54,472 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6441c486,type=ConfigurationPropertiesRebinder]
2018-06-20 14:12:54,477 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-20 14:12:54,479 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-20 14:12:54,822 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:12:54,828 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=b8e5053f-3d36-448c-8be0-86456e2428df, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-20 14:12:54,828 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-20 14:12:54,829 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-20 14:12:54,920 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-20 14:12:54,953 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-20 14:12:55,032 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-20 14:12:55,163 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-20 14:12:55,164 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-20 14:12:55,318 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-20 14:12:55,319 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-20 14:12:56,013 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:12:56,130 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-20 14:12:56,130 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-20 14:12:56,130 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-20 14:12:56,130 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-20 14:12:56,130 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-20 14:12:56,130 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-20 14:12:56,131 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-20 14:12:56,304 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-20 14:12:56,307 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-20 14:12:56,313 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-20 14:12:56,317 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529475176317 with initial instances count: 2
2018-06-20 14:12:56,341 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-20 14:12:56,342 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529475176342, current=UP, previous=STARTING]
2018-06-20 14:12:56,345 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-20 14:12:56,379 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-20 14:12:56,479 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-20 14:12:56,480 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-20 14:12:56,485 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 12.264 seconds (JVM running for 13.915)
2018-06-20 14:12:58,836 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-20 14:13:05,888 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-20 14:13:05,888 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-20 14:13:05,915 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2018-06-20 14:14:22,133 INFO [org.springframework.beans.factory.xml.XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-06-20 14:14:22,173 INFO [org.springframework.jdbc.support.SQLErrorCodesFactory:127] SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-06-20 14:14:22,191 INFO [com.xunyu.config.logs.GlobalExceptionHandler:43] GlobalExceptionHandler,捕获异常:
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 143, line 14, column 11, token OUT : select count(1)
    from tbl_gateway_out_config
    where isabled = 1
     
     
     
     
     
     
     
     
     
     
      and out.is_used = ?
### The error may exist in file [D:\XunYuProjects\msg-xunyu-all\xunyu_operator\target\classes\mapper\GatewayOutConfigMapper.xml]
### The error may involve com.xunyu.operator.pojo.out.GatewayOutConfig.selectConfigListCount
### The error occurred while executing a query
### SQL: select count(1)     from tbl_gateway_out_config     where isabled = 1                                                                   and out.is_used = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 143, line 14, column 11, token OUT : select count(1)
    from tbl_gateway_out_config
    where isabled = 1
     
     
     
     
     
     
     
     
     
     
      and out.is_used = ?
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; sql injection violation, syntax error: ERROR. pos 143, line 14, column 11, token OUT : select count(1)
    from tbl_gateway_out_config
    where isabled = 1
     
     
     
     
     
     
     
     
     
     
      and out.is_used = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 143, line 14, column 11, token OUT : select count(1)
    from tbl_gateway_out_config
    where isabled = 1
     
     
     
     
     
     
     
     
     
     
      and out.is_used = ?;eString:org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 143, line 14, column 11, token OUT : select count(1)
    from tbl_gateway_out_config
    where isabled = 1
     
     
     
     
     
     
     
     
     
     
      and out.is_used = ?
### The error may exist in file [D:\XunYuProjects\msg-xunyu-all\xunyu_operator\target\classes\mapper\GatewayOutConfigMapper.xml]
### The error may involve com.xunyu.operator.pojo.out.GatewayOutConfig.selectConfigListCount
### The error occurred while executing a query
### SQL: select count(1)     from tbl_gateway_out_config     where isabled = 1                                                                   and out.is_used = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 143, line 14, column 11, token OUT : select count(1)
    from tbl_gateway_out_config
    where isabled = 1
     
     
     
     
     
     
     
     
     
     
      and out.is_used = ?
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; sql injection violation, syntax error: ERROR. pos 143, line 14, column 11, token OUT : select count(1)
    from tbl_gateway_out_config
    where isabled = 1
     
     
     
     
     
     
     
     
     
     
      and out.is_used = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 143, line 14, column 11, token OUT : select count(1)
    from tbl_gateway_out_config
    where isabled = 1
     
     
     
     
     
     
     
     
     
     
      and out.is_used = ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:84)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl.selectConfigListCount(GatewayOutConfigDaoImpl.java:55)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl$$FastClassBySpringCGLIB$$a0bf756e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl$$EnhancerBySpringCGLIB$$dd07991b.selectConfigListCount(<generated>)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl.selectConfigListCount(GatewayOutConfigServiceImpl.java:85)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl$$FastClassBySpringCGLIB$$cf994634.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:669)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl$$EnhancerBySpringCGLIB$$d2ed888c.selectConfigListCount(<generated>)
	at com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(GatewayOutConfigController.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.xunyu.config.filter.SessionFilter.doFilter(SessionFilter.java:35)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 143, line 14, column 11, token OUT : select count(1)
    from tbl_gateway_out_config
    where isabled = 1
     
     
     
     
     
     
     
     
     
     
      and out.is_used = ?
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:798)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:251)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:473)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:929)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:473)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:929)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:473)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.ReuseExecutor.prepareStatement(ReuseExecutor.java:89)
	at org.apache.ibatis.executor.ReuseExecutor.doQuery(ReuseExecutor.java:59)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 89 more
Caused by: com.alibaba.druid.sql.parser.ParserException: ERROR. pos 143, line 14, column 11, token OUT
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:787)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:185)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitXor(SQLExprParser.java:118)
	at com.alibaba.druid.sql.parser.SQLExprParser.multiplicative(SQLExprParser.java:205)
	at com.alibaba.druid.sql.parser.SQLExprParser.additive(SQLExprParser.java:1825)
	at com.alibaba.druid.sql.parser.SQLExprParser.shift(SQLExprParser.java:1855)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitAnd(SQLExprParser.java:1635)
	at com.alibaba.druid.sql.parser.SQLExprParser.bitOr(SQLExprParser.java:1649)
	at com.alibaba.druid.sql.parser.SQLExprParser.equality(SQLExprParser.java:1669)
	at com.alibaba.druid.sql.parser.SQLExprParser.relational(SQLExprParser.java:2005)
	at com.alibaba.druid.sql.parser.SQLExprParser.andRest(SQLExprParser.java:1892)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseWhere(SQLSelectParser.java:354)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:176)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:59)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:114)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:147)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:81)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:624)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:578)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:785)
	... 115 more

2018-06-20 14:17:24,387 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-20 14:17:24,404 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aac3f4e: startup date [Wed Jun 20 14:17:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ff8d125
2018-06-20 14:17:25,151 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:17:25,152 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:17:25,293 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-20 14:17:25,441 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-20 14:17:25,706 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=f4379bae-222e-3e06-8ca4-e515cc7093a3
2018-06-20 14:17:25,742 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-20 14:17:25,837 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$15fee56d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:17:25,857 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$de7fc9dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:17:25,866 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e3d23f2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:17:25,897 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$2ce4754a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:17:25,943 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ffec4229] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:17:26,282 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-20 14:17:26,294 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-20 14:17:26,295 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-20 14:17:26,443 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-20 14:17:26,444 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2040 ms
2018-06-20 14:17:26,820 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-20 14:17:26,821 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-20 14:17:26,825 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-20 14:17:26,826 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-20 14:17:26,826 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-20 14:17:26,826 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-20 14:17:26,827 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-20 14:17:26,827 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-20 14:17:26,827 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-20 14:17:26,827 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-20 14:17:26,827 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-20 14:17:27,115 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-20 14:17:28,435 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:17:28,436 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:17:28,440 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:17:28,441 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:17:28,652 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:17:29,081 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@aac3f4e: startup date [Wed Jun 20 14:17:24 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ff8d125
2018-06-20 14:17:29,200 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:17:29,201 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:17:29,202 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:17:29,202 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:17:29,203 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:17:29,205 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:17:29,205 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:17:29,206 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:17:29,206 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:17:29,207 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:17:29,207 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-20 14:17:29,207 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:17:29,208 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:17:29,208 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:17:29,209 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:17:29,209 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:17:29,209 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:17:29,210 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:17:29,211 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:17:29,211 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:17:29,212 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:17:29,212 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:17:29,215 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-20 14:17:29,215 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-20 14:17:29,259 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:17:29,259 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:17:29,286 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-20 14:17:29,328 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:17:30,211 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-20 14:17:30,212 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:17:30,213 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:17:30,214 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-20 14:17:30,215 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:17:30,215 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:17:30,215 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:17:30,216 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:17:30,216 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:17:30,217 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-20 14:17:30,217 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:17:30,217 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-20 14:17:30,218 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-20 14:17:30,218 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:17:30,219 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:17:30,219 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-20 14:17:30,220 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:17:30,220 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:17:30,220 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:17:30,221 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:17:30,221 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:17:30,222 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-20 14:17:30,223 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-20 14:17:30,223 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:17:30,224 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-20 14:17:30,225 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-20 14:17:30,227 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:17:30,227 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-20 14:17:30,228 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-20 14:17:30,806 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-20 14:17:30,806 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-20 14:17:30,816 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-20 14:17:30,819 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-20 14:17:30,820 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-20 14:17:30,820 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-20 14:17:30,821 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-20 14:17:30,822 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-20 14:17:30,824 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-20 14:17:30,838 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-20 14:17:30,849 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-20 14:17:30,854 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-20 14:17:30,868 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=aac3f4e,type=ConfigurationPropertiesRebinder]
2018-06-20 14:17:30,872 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-20 14:17:30,873 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-20 14:17:31,185 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:17:31,190 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=b810a98b-1f56-47de-8c9b-d75d56ef3bda, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-20 14:17:31,190 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-20 14:17:31,190 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-20 14:17:31,272 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-20 14:17:31,279 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-20 14:17:31,313 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-20 14:17:31,364 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-20 14:17:31,364 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-20 14:17:31,464 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-20 14:17:31,465 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-20 14:17:31,717 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:17:31,805 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-20 14:17:31,806 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-20 14:17:31,806 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-20 14:17:31,806 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-20 14:17:31,806 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-20 14:17:31,806 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-20 14:17:31,807 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-20 14:17:31,950 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-20 14:17:31,953 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-20 14:17:31,956 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-20 14:17:31,961 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529475451961 with initial instances count: 2
2018-06-20 14:17:31,985 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-20 14:17:31,986 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529475451986, current=UP, previous=STARTING]
2018-06-20 14:17:31,988 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-20 14:17:32,031 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-20 14:17:32,111 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-20 14:17:32,112 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-20 14:17:32,117 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 9.643 seconds (JVM running for 11.294)
2018-06-20 14:17:34,563 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-20 14:17:38,346 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-20 14:17:38,347 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-20 14:17:38,375 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-06-20 14:17:38,833 INFO [org.springframework.beans.factory.xml.XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-06-20 14:17:38,859 INFO [org.springframework.jdbc.support.SQLErrorCodesFactory:127] SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-06-20 14:17:38,867 INFO [com.xunyu.config.logs.GlobalExceptionHandler:43] GlobalExceptionHandler,捕获异常:
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 63, line 2, column 35, token OUT : select count(1)
    from tbl_gateway_out_config o
    where out.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?
### The error may exist in file [D:\XunYuProjects\msg-xunyu-all\xunyu_operator\target\classes\mapper\GatewayOutConfigMapper.xml]
### The error may involve com.xunyu.operator.pojo.out.GatewayOutConfig.selectConfigListCount
### The error occurred while executing a query
### SQL: select count(1)     from tbl_gateway_out_config o     where out.isabled = 1     LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id     LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id     LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id     LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id                                                                   and o.is_used = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 63, line 2, column 35, token OUT : select count(1)
    from tbl_gateway_out_config o
    where out.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; sql injection violation, syntax error: ERROR. pos 63, line 2, column 35, token OUT : select count(1)
    from tbl_gateway_out_config o
    where out.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 63, line 2, column 35, token OUT : select count(1)
    from tbl_gateway_out_config o
    where out.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?;eString:org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 63, line 2, column 35, token OUT : select count(1)
    from tbl_gateway_out_config o
    where out.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?
### The error may exist in file [D:\XunYuProjects\msg-xunyu-all\xunyu_operator\target\classes\mapper\GatewayOutConfigMapper.xml]
### The error may involve com.xunyu.operator.pojo.out.GatewayOutConfig.selectConfigListCount
### The error occurred while executing a query
### SQL: select count(1)     from tbl_gateway_out_config o     where out.isabled = 1     LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id     LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id     LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id     LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id                                                                   and o.is_used = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 63, line 2, column 35, token OUT : select count(1)
    from tbl_gateway_out_config o
    where out.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; sql injection violation, syntax error: ERROR. pos 63, line 2, column 35, token OUT : select count(1)
    from tbl_gateway_out_config o
    where out.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 63, line 2, column 35, token OUT : select count(1)
    from tbl_gateway_out_config o
    where out.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:84)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl.selectConfigListCount(GatewayOutConfigDaoImpl.java:55)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl$$FastClassBySpringCGLIB$$a0bf756e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl$$EnhancerBySpringCGLIB$$8aff48e3.selectConfigListCount(<generated>)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl.selectConfigListCount(GatewayOutConfigServiceImpl.java:85)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl$$FastClassBySpringCGLIB$$cf994634.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:669)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl$$EnhancerBySpringCGLIB$$8fb45e6c.selectConfigListCount(<generated>)
	at com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(GatewayOutConfigController.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.xunyu.config.filter.SessionFilter.doFilter(SessionFilter.java:35)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, syntax error: ERROR. pos 63, line 2, column 35, token OUT : select count(1)
    from tbl_gateway_out_config o
    where out.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:798)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:251)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:473)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:929)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:473)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:929)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:473)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.ReuseExecutor.prepareStatement(ReuseExecutor.java:89)
	at org.apache.ibatis.executor.ReuseExecutor.doQuery(ReuseExecutor.java:59)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 89 more
Caused by: com.alibaba.druid.sql.parser.ParserException: ERROR. pos 63, line 2, column 35, token OUT
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:787)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:185)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:86)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseWhere(SQLSelectParser.java:361)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:176)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:59)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:114)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:147)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:81)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:624)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:578)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:785)
	... 115 more

2018-06-20 14:18:00,629 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-20 14:18:00,661 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f6d27cc: startup date [Wed Jun 20 14:18:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5a1de7fb
2018-06-20 14:18:02,316 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:18:02,317 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:18:02,475 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-20 14:18:02,668 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-20 14:18:03,052 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=f4379bae-222e-3e06-8ca4-e515cc7093a3
2018-06-20 14:18:03,093 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-20 14:18:03,217 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ee9d1e97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:18:03,243 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$b71e0307] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:18:03,252 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bc707856] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:18:03,294 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$582ae74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:18:03,345 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d88a7b53] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:18:03,773 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-20 14:18:03,786 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-20 14:18:03,788 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-20 14:18:04,021 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-20 14:18:04,022 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 3360 ms
2018-06-20 14:18:04,481 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-20 14:18:04,482 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-20 14:18:04,487 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-20 14:18:04,489 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-20 14:18:04,490 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-20 14:18:04,491 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-20 14:18:04,492 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-20 14:18:04,493 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-20 14:18:04,494 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-20 14:18:04,494 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-20 14:18:04,494 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-20 14:18:04,867 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-20 14:18:06,748 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:18:06,748 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:18:06,806 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:18:06,811 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:18:07,504 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:18:08,012 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f6d27cc: startup date [Wed Jun 20 14:18:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5a1de7fb
2018-06-20 14:18:08,207 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:18:08,209 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:18:08,210 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:18:08,211 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:18:08,213 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:18:08,213 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:18:08,214 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:18:08,214 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:18:08,214 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:18:08,215 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:18:08,218 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:18:08,219 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:18:08,220 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:18:08,221 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:18:08,221 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:18:08,222 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:18:08,223 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-20 14:18:08,226 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:18:08,227 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:18:08,227 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:18:08,227 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:18:08,228 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:18:08,234 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-20 14:18:08,235 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-20 14:18:08,307 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:18:08,308 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:18:08,353 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-20 14:18:08,400 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:18:09,477 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-20 14:18:09,478 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-20 14:18:09,478 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:18:09,478 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:18:09,479 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:18:09,480 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-20 14:18:09,481 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:18:09,482 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:18:09,484 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:18:09,486 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-20 14:18:09,486 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:18:09,487 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:18:09,488 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-20 14:18:09,488 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:18:09,489 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:18:09,491 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-20 14:18:09,492 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-20 14:18:09,492 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:18:09,493 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:18:09,495 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-20 14:18:09,495 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-20 14:18:09,496 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:18:09,496 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:18:09,496 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:18:09,497 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-20 14:18:09,497 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-20 14:18:09,497 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:18:09,499 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-20 14:18:09,500 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:18:10,159 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-20 14:18:10,160 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-20 14:18:10,171 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-20 14:18:10,176 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-20 14:18:10,177 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-20 14:18:10,177 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-20 14:18:10,178 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-20 14:18:10,179 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-20 14:18:10,182 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-20 14:18:10,196 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-20 14:18:10,211 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-20 14:18:10,222 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-20 14:18:10,236 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1f6d27cc,type=ConfigurationPropertiesRebinder]
2018-06-20 14:18:10,241 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-20 14:18:10,244 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-20 14:18:10,586 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:18:10,591 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=9c5dd4ce-765c-410e-9fb2-a68914c5e83c, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-20 14:18:10,592 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-20 14:18:10,592 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-20 14:18:10,685 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-20 14:18:10,694 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-20 14:18:10,734 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-20 14:18:10,801 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-20 14:18:10,801 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-20 14:18:10,929 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-20 14:18:10,930 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-20 14:18:11,280 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:18:11,391 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-20 14:18:11,391 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-20 14:18:11,391 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-20 14:18:11,391 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-20 14:18:11,391 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-20 14:18:11,392 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-20 14:18:11,392 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-20 14:18:11,579 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-20 14:18:11,583 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-20 14:18:11,587 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-20 14:18:11,590 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529475491590 with initial instances count: 2
2018-06-20 14:18:11,627 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-20 14:18:11,627 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529475491627, current=UP, previous=STARTING]
2018-06-20 14:18:11,629 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-20 14:18:11,660 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-20 14:18:11,771 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-20 14:18:11,772 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-20 14:18:11,777 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 13.658 seconds (JVM running for 15.202)
2018-06-20 14:18:14,522 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-20 14:18:19,852 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-20 14:18:19,854 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-20 14:18:19,891 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2018-06-20 14:18:20,416 INFO [org.springframework.beans.factory.xml.XmlBeanDefinitionReader:317] Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-06-20 14:18:20,445 INFO [org.springframework.jdbc.support.SQLErrorCodesFactory:127] SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-06-20 14:18:20,456 INFO [com.xunyu.config.logs.GlobalExceptionHandler:43] GlobalExceptionHandler,捕获异常:
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'
    LEFT JOIN tbl_sp_gateway_confi', expect LEFT, actual LEFT pos 82, line 3, column 25, token LEFT : select count(1)
    from tbl_gateway_out_config o
    where o.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?
### The error may exist in file [D:\XunYuProjects\msg-xunyu-all\xunyu_operator\target\classes\mapper\GatewayOutConfigMapper.xml]
### The error may involve com.xunyu.operator.pojo.out.GatewayOutConfig.selectConfigListCount
### The error occurred while executing a query
### SQL: select count(1)     from tbl_gateway_out_config o     where o.isabled = 1     LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id     LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id     LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id     LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id                                                                   and o.is_used = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'
    LEFT JOIN tbl_sp_gateway_confi', expect LEFT, actual LEFT pos 82, line 3, column 25, token LEFT : select count(1)
    from tbl_gateway_out_config o
    where o.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'
    LEFT JOIN tbl_sp_gateway_confi', expect LEFT, actual LEFT pos 82, line 3, column 25, token LEFT : select count(1)
    from tbl_gateway_out_config o
    where o.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'
    LEFT JOIN tbl_sp_gateway_confi', expect LEFT, actual LEFT pos 82, line 3, column 25, token LEFT : select count(1)
    from tbl_gateway_out_config o
    where o.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?;eString:org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'
    LEFT JOIN tbl_sp_gateway_confi', expect LEFT, actual LEFT pos 82, line 3, column 25, token LEFT : select count(1)
    from tbl_gateway_out_config o
    where o.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?
### The error may exist in file [D:\XunYuProjects\msg-xunyu-all\xunyu_operator\target\classes\mapper\GatewayOutConfigMapper.xml]
### The error may involve com.xunyu.operator.pojo.out.GatewayOutConfig.selectConfigListCount
### The error occurred while executing a query
### SQL: select count(1)     from tbl_gateway_out_config o     where o.isabled = 1     LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id     LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id     LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id     LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id                                                                   and o.is_used = ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'
    LEFT JOIN tbl_sp_gateway_confi', expect LEFT, actual LEFT pos 82, line 3, column 25, token LEFT : select count(1)
    from tbl_gateway_out_config o
    where o.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'
    LEFT JOIN tbl_sp_gateway_confi', expect LEFT, actual LEFT pos 82, line 3, column 25, token LEFT : select count(1)
    from tbl_gateway_out_config o
    where o.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'
    LEFT JOIN tbl_sp_gateway_confi', expect LEFT, actual LEFT pos 82, line 3, column 25, token LEFT : select count(1)
    from tbl_gateway_out_config o
    where o.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:84)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy81.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl.selectConfigListCount(GatewayOutConfigDaoImpl.java:55)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl$$FastClassBySpringCGLIB$$a0bf756e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.xunyu.operator.dao.out.GatewayOutConfigDaoImpl$$EnhancerBySpringCGLIB$$76599da1.selectConfigListCount(<generated>)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl.selectConfigListCount(GatewayOutConfigServiceImpl.java:85)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl$$FastClassBySpringCGLIB$$cf994634.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:669)
	at com.xunyu.operator.service.out.GatewayOutConfigServiceImpl$$EnhancerBySpringCGLIB$$6fdff18.selectConfigListCount(<generated>)
	at com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(GatewayOutConfigController.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.xunyu.config.filter.SessionFilter.doFilter(SessionFilter.java:35)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'
    LEFT JOIN tbl_sp_gateway_confi', expect LEFT, actual LEFT pos 82, line 3, column 25, token LEFT : select count(1)
    from tbl_gateway_out_config o
    where o.isabled = 1
    LEFT JOIN tbl_sp_gateway_config s on s.gateway_out_config_id = o.gateway_out_config_id
    LEFT JOIN tbl_gateway_access_config c on s.config_id = c.config_id
    LEFT JOIN tbl_carrier_agree a on o.carrier_agree_id = a.carrier_agree_id
    LEFT JOIN tbl_customer cus on o.customer_id = cus.customer_id
     
     
     
     
     
     
     
     
     
     
      and o.is_used = ?
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:798)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:251)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:473)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:929)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:473)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:929)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:473)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.ReuseExecutor.prepareStatement(ReuseExecutor.java:89)
	at org.apache.ibatis.executor.ReuseExecutor.doQuery(ReuseExecutor.java:59)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 89 more
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'
    LEFT JOIN tbl_sp_gateway_confi', expect LEFT, actual LEFT pos 82, line 3, column 25, token LEFT
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:284)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:421)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:81)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:624)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:578)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:785)
	... 115 more

2018-06-20 14:19:54,548 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-20 14:19:54,566 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2869a9: startup date [Wed Jun 20 14:19:54 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3e6104fc
2018-06-20 14:19:55,411 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:19:55,412 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:19:55,582 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-20 14:19:55,750 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-20 14:19:56,040 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=f4379bae-222e-3e06-8ca4-e515cc7093a3
2018-06-20 14:19:56,082 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-20 14:19:56,186 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$319c0e82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:19:56,210 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$fa1cf2f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:19:56,219 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ff6f6841] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:19:56,263 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$48819e5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:19:56,322 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1b896b3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:19:56,711 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-20 14:19:56,720 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-20 14:19:56,722 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-20 14:19:56,860 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-20 14:19:56,861 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2295 ms
2018-06-20 14:19:57,235 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-20 14:19:57,236 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-20 14:19:57,241 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-20 14:19:57,241 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-20 14:19:57,241 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-20 14:19:57,241 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-20 14:19:57,242 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-20 14:19:57,242 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-20 14:19:57,243 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-20 14:19:57,243 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-20 14:19:57,243 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-20 14:19:57,564 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-20 14:19:59,016 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:19:59,016 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:19:59,021 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:19:59,022 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:19:59,229 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:19:59,652 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2869a9: startup date [Wed Jun 20 14:19:54 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3e6104fc
2018-06-20 14:19:59,756 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:19:59,757 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-20 14:19:59,758 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:19:59,758 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:19:59,758 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:19:59,759 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:19:59,759 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:19:59,759 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:19:59,760 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:19:59,760 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:19:59,761 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:19:59,762 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:19:59,762 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:19:59,762 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:19:59,763 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:19:59,763 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:19:59,764 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:19:59,766 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:19:59,767 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:19:59,767 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:19:59,767 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:19:59,768 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:19:59,770 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-20 14:19:59,770 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-20 14:19:59,812 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:19:59,812 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:19:59,838 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-20 14:19:59,869 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:20:00,729 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-20 14:20:00,729 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:20:00,730 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-20 14:20:00,730 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-20 14:20:00,731 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:20:00,731 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-20 14:20:00,734 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:20:00,735 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-20 14:20:00,736 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-20 14:20:00,737 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:20:00,737 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:20:00,738 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:20:00,739 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-20 14:20:00,740 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-20 14:20:00,741 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:20:00,742 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-20 14:20:00,743 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:20:00,743 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:20:00,744 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:20:00,745 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-20 14:20:00,745 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:20:00,746 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:20:00,746 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:20:00,747 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-20 14:20:00,747 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:20:00,748 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:20:00,748 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-20 14:20:00,749 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:20:00,749 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:20:01,369 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-20 14:20:01,370 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-20 14:20:01,378 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-20 14:20:01,382 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-20 14:20:01,382 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-20 14:20:01,383 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-20 14:20:01,384 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-20 14:20:01,384 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-20 14:20:01,387 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-20 14:20:01,400 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-20 14:20:01,412 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-20 14:20:01,417 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-20 14:20:01,428 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4c2869a9,type=ConfigurationPropertiesRebinder]
2018-06-20 14:20:01,432 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-20 14:20:01,434 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-20 14:20:01,772 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:20:01,778 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=a9329105-d397-4ba1-a2e8-08ed610eb217, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-20 14:20:01,778 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-20 14:20:01,779 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-20 14:20:01,854 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-20 14:20:01,862 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-20 14:20:01,895 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-20 14:20:01,947 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-20 14:20:01,948 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-20 14:20:02,048 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-20 14:20:02,048 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-20 14:20:02,339 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:20:02,542 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-20 14:20:02,542 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-20 14:20:02,543 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-20 14:20:02,543 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-20 14:20:02,543 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-20 14:20:02,543 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-20 14:20:02,543 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-20 14:20:02,740 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-20 14:20:02,744 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-20 14:20:02,746 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-20 14:20:02,750 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529475602750 with initial instances count: 2
2018-06-20 14:20:02,772 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-20 14:20:02,773 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529475602773, current=UP, previous=STARTING]
2018-06-20 14:20:02,775 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-20 14:20:02,814 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-20 14:20:02,902 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-20 14:20:02,903 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-20 14:20:02,908 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 10.297 seconds (JVM running for 11.812)
2018-06-20 14:20:05,874 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-20 14:20:07,279 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-20 14:20:07,279 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-20 14:20:07,336 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2018-06-20 14:24:56,740 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-20 14:24:56,762 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@46678e49: startup date [Wed Jun 20 14:24:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@335b5620
2018-06-20 14:24:57,761 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:24:57,763 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:24:57,974 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-20 14:24:58,182 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-20 14:24:58,873 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=f4379bae-222e-3e06-8ca4-e515cc7093a3
2018-06-20 14:24:58,924 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-20 14:24:59,062 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c26fc1c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:24:59,096 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$8af0a633] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:24:59,108 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$90431b82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:24:59,179 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d95551a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:24:59,258 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ac5d1e7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:24:59,889 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-20 14:24:59,903 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-20 14:24:59,905 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-20 14:25:00,228 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-20 14:25:00,229 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 3467 ms
2018-06-20 14:25:01,406 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-20 14:25:01,407 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-20 14:25:01,417 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-20 14:25:01,418 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-20 14:25:01,419 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-20 14:25:01,419 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-20 14:25:01,420 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-20 14:25:01,420 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-20 14:25:01,421 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-20 14:25:01,421 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-20 14:25:01,421 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-20 14:25:02,058 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-20 14:25:04,538 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:25:04,539 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:25:04,548 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:25:04,548 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:25:04,894 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:25:05,563 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@46678e49: startup date [Wed Jun 20 14:24:56 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@335b5620
2018-06-20 14:25:05,796 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:25:05,797 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:25:05,798 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:25:05,798 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:25:05,799 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-20 14:25:05,799 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:25:05,800 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:25:05,800 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:25:05,800 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:25:05,801 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:25:05,801 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:25:05,801 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:25:05,802 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:25:05,802 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:25:05,803 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:25:05,803 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:25:05,804 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:25:05,805 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:25:05,805 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:25:05,806 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:25:05,806 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:25:05,806 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:25:05,808 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-20 14:25:05,809 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-20 14:25:05,856 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:25:05,856 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:25:05,882 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-20 14:25:05,911 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:25:06,747 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:25:06,748 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:25:06,749 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:25:06,749 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:25:06,750 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-20 14:25:06,750 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:25:06,751 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-20 14:25:06,752 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:25:06,754 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-20 14:25:06,754 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:25:06,754 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:25:06,755 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-20 14:25:06,756 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-20 14:25:06,756 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-20 14:25:06,757 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:25:06,757 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:25:06,759 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-20 14:25:06,760 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:25:06,761 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-20 14:25:06,761 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:25:06,762 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-20 14:25:06,762 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:25:06,763 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-20 14:25:06,764 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:25:06,764 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-20 14:25:06,764 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:25:06,765 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:25:06,765 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-20 14:25:06,766 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:25:07,389 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-20 14:25:07,390 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-20 14:25:07,400 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-20 14:25:07,406 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-20 14:25:07,407 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-20 14:25:07,407 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-20 14:25:07,408 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-20 14:25:07,409 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-20 14:25:07,411 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-20 14:25:07,425 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-20 14:25:07,437 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-20 14:25:07,443 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-20 14:25:07,455 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=46678e49,type=ConfigurationPropertiesRebinder]
2018-06-20 14:25:07,460 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-20 14:25:07,462 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-20 14:25:07,774 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:25:07,779 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=1d112f09-4f48-4610-8f98-8c925c8ba7d9, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-20 14:25:07,779 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-20 14:25:07,780 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-20 14:25:07,854 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-20 14:25:07,862 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-20 14:25:07,899 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-20 14:25:07,957 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-20 14:25:07,958 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-20 14:25:08,067 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-20 14:25:08,068 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-20 14:25:08,336 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:25:08,431 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-20 14:25:08,432 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-20 14:25:08,432 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-20 14:25:08,432 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-20 14:25:08,432 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-20 14:25:08,432 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-20 14:25:08,432 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-20 14:25:08,585 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-20 14:25:08,587 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-20 14:25:08,591 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-20 14:25:08,597 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529475908596 with initial instances count: 2
2018-06-20 14:25:08,620 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-20 14:25:08,620 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529475908620, current=UP, previous=STARTING]
2018-06-20 14:25:08,622 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-20 14:25:08,664 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-20 14:25:08,750 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-20 14:25:08,750 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-20 14:25:08,755 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 14.67 seconds (JVM running for 17.206)
2018-06-20 14:25:12,472 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-20 14:25:31,579 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-20 14:25:31,579 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-20 14:25:31,636 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2018-06-20 14:28:29,685 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-20 14:28:29,705 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1a35993f: startup date [Wed Jun 20 14:28:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fb669c3
2018-06-20 14:28:30,525 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:28:30,526 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:28:30,663 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-20 14:28:30,806 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-20 14:28:31,120 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=f4379bae-222e-3e06-8ca4-e515cc7093a3
2018-06-20 14:28:31,163 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-20 14:28:31,318 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$b56b5c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:28:31,353 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$d3d79a31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:28:31,367 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d92a0f80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:28:31,428 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$223c459e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:28:31,483 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f544127d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:28:31,880 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-20 14:28:31,890 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-20 14:28:31,891 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-20 14:28:32,024 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-20 14:28:32,024 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2319 ms
2018-06-20 14:28:32,422 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-20 14:28:32,424 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-20 14:28:32,429 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-20 14:28:32,430 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-20 14:28:32,430 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-20 14:28:32,430 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-20 14:28:32,430 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-20 14:28:32,430 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-20 14:28:32,431 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-20 14:28:32,431 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-20 14:28:32,431 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-20 14:28:32,731 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-20 14:28:34,148 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:28:34,149 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:28:34,153 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:28:34,153 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:28:34,361 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:28:34,730 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1a35993f: startup date [Wed Jun 20 14:28:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1fb669c3
2018-06-20 14:28:34,830 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:28:34,832 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:28:34,832 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:28:34,832 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:28:34,833 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:28:34,833 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:28:34,833 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:28:34,834 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:28:34,834 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:28:34,834 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:28:34,835 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:28:34,835 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-20 14:28:34,836 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:28:34,836 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:28:34,836 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:28:34,837 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:28:34,837 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:28:34,838 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:28:34,838 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:28:34,839 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:28:34,839 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:28:34,839 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:28:34,841 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-20 14:28:34,842 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-20 14:28:34,884 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:28:34,884 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:28:34,911 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-20 14:28:34,939 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:28:35,779 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-20 14:28:35,779 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:28:35,781 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-20 14:28:35,782 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-20 14:28:35,782 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:28:35,783 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:28:35,783 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-20 14:28:35,784 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:28:35,784 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:28:35,785 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:28:35,786 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-20 14:28:35,787 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:28:35,787 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:28:35,788 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-20 14:28:35,789 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-20 14:28:35,790 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:28:35,790 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:28:35,790 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:28:35,791 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:28:35,792 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:28:35,793 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-20 14:28:35,793 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-20 14:28:35,793 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-20 14:28:35,794 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:28:35,794 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:28:35,795 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-20 14:28:35,796 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-20 14:28:35,796 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:28:35,796 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:28:36,403 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-20 14:28:36,405 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-20 14:28:36,417 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-20 14:28:36,421 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-20 14:28:36,421 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-20 14:28:36,422 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-20 14:28:36,422 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-20 14:28:36,423 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-20 14:28:36,426 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-20 14:28:36,442 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-20 14:28:36,461 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-20 14:28:36,471 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-20 14:28:36,487 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1a35993f,type=ConfigurationPropertiesRebinder]
2018-06-20 14:28:36,493 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-20 14:28:36,496 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-20 14:28:36,818 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:28:36,822 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=d466fac0-9662-40fc-bad8-1ab3bd7880ac, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-20 14:28:36,823 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-20 14:28:36,823 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-20 14:28:36,897 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-20 14:28:36,904 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-20 14:28:36,939 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-20 14:28:36,998 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-20 14:28:36,998 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-20 14:28:37,116 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-20 14:28:37,116 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-20 14:28:37,370 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:28:37,471 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-20 14:28:37,471 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-20 14:28:37,471 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-20 14:28:37,472 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-20 14:28:37,472 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-20 14:28:37,472 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-20 14:28:37,472 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-20 14:28:37,617 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-20 14:28:37,619 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-20 14:28:37,623 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-20 14:28:37,629 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529476117628 with initial instances count: 2
2018-06-20 14:28:37,653 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-20 14:28:37,653 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529476117653, current=UP, previous=STARTING]
2018-06-20 14:28:37,655 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-20 14:28:37,697 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-20 14:28:37,764 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-20 14:28:37,765 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-20 14:28:37,769 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 10.018 seconds (JVM running for 11.394)
2018-06-20 14:28:40,304 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-20 14:28:50,103 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-20 14:28:50,103 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-20 14:28:50,131 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2018-06-20 14:33:37,476 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:38:37,477 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:39:59,650 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-20 14:39:59,678 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3162743f: startup date [Wed Jun 20 14:39:59 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@29a0cdb
2018-06-20 14:40:00,651 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:40:00,652 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:40:00,818 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-20 14:40:00,995 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-20 14:40:01,258 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=f4379bae-222e-3e06-8ca4-e515cc7093a3
2018-06-20 14:40:01,296 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-20 14:40:01,431 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$2bdc70de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:40:01,463 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$f45d554e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:40:01,474 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f9afca9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:40:01,522 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$42c200bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:40:01,601 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$15c9cd9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:40:02,233 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-20 14:40:02,244 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-20 14:40:02,245 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-20 14:40:02,389 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-20 14:40:02,390 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2712 ms
2018-06-20 14:40:02,804 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-20 14:40:02,806 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-20 14:40:02,812 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-20 14:40:02,812 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-20 14:40:02,813 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-20 14:40:02,813 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-20 14:40:02,813 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-20 14:40:02,813 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-20 14:40:02,813 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-20 14:40:02,814 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-20 14:40:02,814 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-20 14:40:03,155 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-20 14:40:04,816 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:40:04,817 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:40:04,821 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:40:04,822 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:40:05,011 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:40:05,381 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3162743f: startup date [Wed Jun 20 14:39:59 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@29a0cdb
2018-06-20 14:40:05,485 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:40:05,486 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:40:05,486 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:40:05,487 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:40:05,487 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:40:05,488 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:40:05,488 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:40:05,488 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:40:05,489 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:40:05,489 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:40:05,490 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-20 14:40:05,490 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:40:05,490 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:40:05,491 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:40:05,491 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:40:05,492 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:40:05,492 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:40:05,494 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:40:05,494 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:40:05,495 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:40:05,495 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:40:05,495 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:40:05,497 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-20 14:40:05,498 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-20 14:40:05,540 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:40:05,541 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:40:05,566 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-20 14:40:05,595 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:40:06,437 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-20 14:40:06,438 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:40:06,439 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:40:06,439 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-20 14:40:06,439 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-20 14:40:06,441 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-20 14:40:06,441 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:40:06,442 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-20 14:40:06,444 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:40:06,444 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:40:06,445 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:40:06,446 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-20 14:40:06,447 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-20 14:40:06,448 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:40:06,449 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-20 14:40:06,450 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:40:06,450 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:40:06,451 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:40:06,451 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:40:06,452 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:40:06,452 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:40:06,453 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:40:06,453 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-20 14:40:06,454 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-20 14:40:06,455 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:40:06,456 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-20 14:40:06,457 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-20 14:40:06,458 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:40:06,458 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:40:07,237 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-20 14:40:07,238 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-20 14:40:07,247 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-20 14:40:07,250 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-20 14:40:07,250 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-20 14:40:07,251 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-20 14:40:07,252 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-20 14:40:07,253 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-20 14:40:07,255 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-20 14:40:07,269 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-20 14:40:07,280 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-20 14:40:07,286 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-20 14:40:07,297 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3162743f,type=ConfigurationPropertiesRebinder]
2018-06-20 14:40:07,301 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-20 14:40:07,303 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-20 14:40:07,620 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:40:07,626 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=f351e72f-9de6-4c0a-8ae3-9530cbe31593, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-20 14:40:07,626 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-20 14:40:07,626 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-20 14:40:07,701 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-20 14:40:07,708 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-20 14:40:07,746 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-20 14:40:07,801 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-20 14:40:07,801 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-20 14:40:07,906 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-20 14:40:07,906 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-20 14:40:08,191 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:40:08,288 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-20 14:40:08,288 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-20 14:40:08,288 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-20 14:40:08,288 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-20 14:40:08,288 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-20 14:40:08,289 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-20 14:40:08,289 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-20 14:40:08,443 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-20 14:40:08,448 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-20 14:40:08,450 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-20 14:40:08,453 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529476808453 with initial instances count: 2
2018-06-20 14:40:08,478 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-20 14:40:08,479 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529476808479, current=UP, previous=STARTING]
2018-06-20 14:40:08,481 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-20 14:40:08,517 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-20 14:40:08,604 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-20 14:40:08,605 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-20 14:40:08,609 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 11.126 seconds (JVM running for 13.207)
2018-06-20 14:40:11,581 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-20 14:40:44,718 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-20 14:40:44,718 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-20 14:40:44,746 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-06-20 14:45:08,293 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:50:08,294 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:54:14,079 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-20 14:54:14,100 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1dc2de84: startup date [Wed Jun 20 14:54:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2b76ff4e
2018-06-20 14:54:14,997 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:54:14,998 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:54:15,183 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-20 14:54:15,415 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-20 14:54:15,782 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=f4379bae-222e-3e06-8ca4-e515cc7093a3
2018-06-20 14:54:15,821 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-20 14:54:15,926 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$b6a3f243] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:54:15,949 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$7f24d6b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:54:15,958 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$84774c02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:54:15,998 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$cd898220] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:54:16,051 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a0914eff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:54:16,423 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-20 14:54:16,437 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-20 14:54:16,438 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-20 14:54:16,611 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-20 14:54:16,611 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2511 ms
2018-06-20 14:54:16,975 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-20 14:54:16,976 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-20 14:54:16,981 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-20 14:54:16,981 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-20 14:54:16,981 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-20 14:54:16,982 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-20 14:54:16,982 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-20 14:54:16,982 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-20 14:54:16,982 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-20 14:54:16,982 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-20 14:54:16,983 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-20 14:54:17,265 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-20 14:54:18,976 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:54:18,977 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:54:18,982 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:54:18,983 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:54:19,209 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:54:19,539 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1dc2de84: startup date [Wed Jun 20 14:54:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2b76ff4e
2018-06-20 14:54:19,658 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:54:19,659 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:54:19,659 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-20 14:54:19,660 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:54:19,660 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:54:19,661 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:54:19,663 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:54:19,663 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:54:19,664 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:54:19,664 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:54:19,664 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:54:19,665 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:54:19,665 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:54:19,666 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:54:19,666 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:54:19,666 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:54:19,667 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:54:19,668 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:54:19,668 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:54:19,668 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:54:19,669 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:54:19,669 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:54:19,671 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-20 14:54:19,672 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-20 14:54:19,713 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:54:19,714 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:54:19,738 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-20 14:54:19,769 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:54:20,712 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-20 14:54:20,714 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:54:20,715 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:54:20,716 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:54:20,718 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:54:20,719 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:54:20,720 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-20 14:54:20,721 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:54:20,722 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:54:20,722 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:54:20,723 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:54:20,725 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:54:20,726 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:54:20,728 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-20 14:54:20,729 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:54:20,730 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:54:20,731 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-20 14:54:20,732 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-20 14:54:20,733 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:54:20,734 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-20 14:54:20,734 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-20 14:54:20,735 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:54:20,736 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:54:20,736 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-20 14:54:20,737 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-20 14:54:20,738 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-20 14:54:20,739 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-20 14:54:20,740 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-20 14:54:20,741 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:54:21,425 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-20 14:54:21,426 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-20 14:54:21,435 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-20 14:54:21,439 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-20 14:54:21,440 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-20 14:54:21,440 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-20 14:54:21,441 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-20 14:54:21,441 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-20 14:54:21,444 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-20 14:54:21,460 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-20 14:54:21,470 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-20 14:54:21,476 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-20 14:54:21,488 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1dc2de84,type=ConfigurationPropertiesRebinder]
2018-06-20 14:54:21,492 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-20 14:54:21,495 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-20 14:54:21,825 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:54:21,832 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=ad90b0ac-119b-41b3-badb-0a2ca2a93e5b, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-20 14:54:21,832 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-20 14:54:21,832 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-20 14:54:21,922 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-20 14:54:21,929 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-20 14:54:21,961 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-20 14:54:22,011 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-20 14:54:22,011 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-20 14:54:22,104 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-20 14:54:22,104 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-20 14:54:22,395 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:54:22,494 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-20 14:54:22,494 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-20 14:54:22,494 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-20 14:54:22,495 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-20 14:54:22,495 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-20 14:54:22,495 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-20 14:54:22,495 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-20 14:54:22,637 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-20 14:54:22,639 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-20 14:54:22,641 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-20 14:54:22,645 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529477662645 with initial instances count: 2
2018-06-20 14:54:22,678 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-20 14:54:22,678 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529477662678, current=UP, previous=STARTING]
2018-06-20 14:54:22,680 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-20 14:54:22,715 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-20 14:54:22,796 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-20 14:54:22,797 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-20 14:54:22,802 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 10.736 seconds (JVM running for 12.232)
2018-06-20 14:54:25,389 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-20 14:54:44,395 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-20 14:54:44,395 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-20 14:54:44,422 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2018-06-20 14:54:45,030 INFO [com.xunyu.config.logs.GlobalExceptionHandler:43] GlobalExceptionHandler,捕获异常:HV000030: No validator could be found for constraint 'org.hibernate.validator.constraints.NotBlank' validating type 'java.lang.Integer'. Check configuration for 'configId';eString:javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'org.hibernate.validator.constraints.NotBlank' validating type 'java.lang.Integer'. Check configuration for 'configId'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.throwExceptionForNullValidator(ConstraintTree.java:229)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getConstraintValidatorNoUnwrapping(ConstraintTree.java:310)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getConstraintValidatorInstanceForAutomaticUnwrapping(ConstraintTree.java:244)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:163)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:87)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:73)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:620)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraint(ValidatorImpl.java:583)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForNonDefaultGroup(ValidatorImpl.java:543)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:457)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:410)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:207)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:118)
	at org.springframework.boot.autoconfigure.web.WebMvcValidator.validate(WebMvcValidator.java:69)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:891)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.validateIfApplicable(ModelAttributeMethodProcessor.java:168)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:115)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.xunyu.config.filter.SessionFilter.doFilter(SessionFilter.java:35)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2018-06-20 14:55:27,884 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-20 14:55:27,906 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4393593c: startup date [Wed Jun 20 14:55:27 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@177bea38
2018-06-20 14:55:28,762 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:55:28,763 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-20 14:55:28,916 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-20 14:55:29,069 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-20 14:55:29,385 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=f4379bae-222e-3e06-8ca4-e515cc7093a3
2018-06-20 14:55:29,438 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-20 14:55:29,756 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6663fba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:55:29,805 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$cee7242a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:55:29,818 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4399979] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:55:29,876 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$1d4bcf97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:55:29,976 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f0539c76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-20 14:55:30,472 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-20 14:55:30,485 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-20 14:55:30,487 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-20 14:55:30,707 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-20 14:55:30,708 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2802 ms
2018-06-20 14:55:31,323 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-20 14:55:31,326 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-20 14:55:31,338 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-20 14:55:31,338 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-20 14:55:31,338 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-20 14:55:31,339 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-20 14:55:31,339 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-20 14:55:31,339 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-20 14:55:31,339 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-20 14:55:31,339 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-20 14:55:31,339 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-20 14:55:31,812 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-20 14:55:33,646 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:55:33,647 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:55:33,652 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-20 14:55:33,653 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-20 14:55:33,999 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:55:34,442 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4393593c: startup date [Wed Jun 20 14:55:27 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@177bea38
2018-06-20 14:55:34,608 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:55:34,609 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:55:34,610 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:55:34,610 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-20 14:55:34,611 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:55:34,612 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:55:34,615 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:55:34,615 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:55:34,616 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:55:34,617 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:55:34,617 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:55:34,618 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:55:34,618 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:55:34,618 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:55:34,619 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-20 14:55:34,619 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:55:34,620 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-20 14:55:34,621 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:55:34,622 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:55:34,622 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-20 14:55:34,622 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:55:34,623 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-20 14:55:34,626 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-20 14:55:34,626 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-20 14:55:34,749 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:55:34,750 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:55:34,816 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-20 14:55:34,865 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-20 14:55:36,224 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-20 14:55:36,225 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:55:36,229 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-20 14:55:36,230 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:55:36,230 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:55:36,231 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-20 14:55:36,232 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-20 14:55:36,232 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:55:36,233 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:55:36,235 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-20 14:55:36,235 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:55:36,236 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:55:36,237 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-20 14:55:36,238 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:55:36,238 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:55:36,239 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:55:36,240 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:55:36,240 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:55:36,241 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-20 14:55:36,243 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-20 14:55:36,243 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-20 14:55:36,245 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-20 14:55:36,246 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:55:36,247 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:55:36,247 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-20 14:55:36,248 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-20 14:55:36,248 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-20 14:55:36,248 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-20 14:55:36,249 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-20 14:55:37,125 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-20 14:55:37,127 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-20 14:55:37,136 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-20 14:55:37,139 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-20 14:55:37,139 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-20 14:55:37,140 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-20 14:55:37,140 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-20 14:55:37,141 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-20 14:55:37,144 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-20 14:55:37,158 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-20 14:55:37,170 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-20 14:55:37,175 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-20 14:55:37,187 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4393593c,type=ConfigurationPropertiesRebinder]
2018-06-20 14:55:37,191 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-20 14:55:37,193 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-20 14:55:37,550 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-20 14:55:37,556 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=494d24b0-336e-458c-890e-13666a9c39a0, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-20 14:55:37,557 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-20 14:55:37,557 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-20 14:55:37,639 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-20 14:55:37,649 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-20 14:55:37,687 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-20 14:55:37,759 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-20 14:55:37,760 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-20 14:55:37,891 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-20 14:55:37,892 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-20 14:55:38,183 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-20 14:55:38,278 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-20 14:55:38,278 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-20 14:55:38,279 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-20 14:55:38,279 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-20 14:55:38,279 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-20 14:55:38,279 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-20 14:55:38,279 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-20 14:55:38,470 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-20 14:55:38,473 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-20 14:55:38,479 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-20 14:55:38,483 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529477738483 with initial instances count: 2
2018-06-20 14:55:38,512 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-20 14:55:38,512 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529477738512, current=UP, previous=STARTING]
2018-06-20 14:55:38,516 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-20 14:55:38,550 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-20 14:55:38,645 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-20 14:55:38,646 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-20 14:55:38,651 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 12.715 seconds (JVM running for 14.267)
2018-06-20 14:55:41,624 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-20 14:56:15,044 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-20 14:56:15,044 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-20 14:56:15,072 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
