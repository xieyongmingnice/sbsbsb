eureka:
  enabled: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8001/eureka/
      #defaultZone: http://47.104.190.174:8001/eureka/
      registry-fetch-interval-seconds: 5 #拉取服务注册信息时间间隔,默认为30秒
  instance:
    lease-renewal-interval-in-seconds: 5 #心跳时间,默认为30秒
    lease-expiration-duration-in-seconds: 10 #若eureka server在这时间内没收到心跳则移除该instance,默认为90秒
    prefer-ip-address: true  #地址使用该属性配置的IP
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}

spring:
  application:
    name: xunyu-zuul
  http:
      multipart:
        max-file-size: 30MB
        max-request-size: 100MB

server:
  port: 8002
#配置zuul  服务网关
zuul:
  host:
      socket-timeout-millis: 60000
      connect-timeout-millis: 60000
      add-host-header: true #表示API网关在进行请求路由转发前为请求设置Host头信息。
  routes:
    api-shiro:
      path: /shiro/**
      service-id: xunyu-shiro
    api-crm:
      path: /crm/**
      service-id: xunyu-crm
    api-department:
      path: /department/**
      service-id: xunyu-department
    api-system:
       path: /sys/**
       service-id: xunyu-system
    api-zipkin:
       path: /zipkin/**
       service-id: xunyu-zipkin
    api-tactics:
       path: /tactics/**
       service-id: xunyu-tactics
    api-log-manager:
       path: /log/**
       service-id: xunyu-log-manager

# 注意，这里在运行的时候有个坑，如果以树形展开写法的话，那么就会出错了，所以这个配置还是避免用树形写法
#ribbon.eureka.enabled: false  # 禁用 eureka 使用listOfServers配置外部ribbon(基于客户端的)负载

#zuul  通过listOfServers配置外部服务的负载均衡
xunyu-crm:
  ribbon:  #IP可以写多个用逗号隔开；开启ribbon(客户端)负载
    listOfServers: http://localhost:8004,http://192.168.3.5:8004

xunyu-shiro:
  ribbon:
      listOfServers: http://localhost:8003,http://192.168.3.5:8003

xunyu-system:
  ribbon:
      listOfServers: http://localhost:8005,http://192.168.3.5:8005

xunyu-log-manager:
  ribbon:
     listOfServers: http://localhost:8007,http://192.168.3.5:8007

xunyu-tactics:
  ribbon:
     listOfServers: http://localhost:8009,http://192.168.3.5:8009

xunyu-department:
   ribbon:
      listOfServers: http://localhost:8008,http://192.168.3.5:8008

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000 #断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。

ribbon:
  ReadTimeout: 60000 #获取或设置读取操作未完成时发生超时之前的毫秒数。
  ConnectTimeout: 60000 #客户端等待与服务器建立连接的时间（以毫秒计）
  MaxAutoRetries: 0 #在同一台服务器上重试的最大次数
  MaxAutoRetriesNextServer: 1 #要重试的下一个服务器的最大数量

#日志
#logging:
   #config: classpath:logback-medicare.xml