2018-06-22 17:13:40,289 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-22 17:13:40,319 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@552518c3: startup date [Fri Jun 22 17:13:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@62e7f11d
2018-06-22 17:13:41,573 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-22 17:13:41,574 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-22 17:13:41,727 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-22 17:13:41,815 INFO [org.springframework.integration.config.IntegrationRegistrar:330] No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
2018-06-22 17:13:41,925 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-22 17:13:42,420 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=6447f988-148c-3908-abec-029b25e33981
2018-06-22 17:13:42,455 INFO [org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130] No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2018-06-22 17:13:42,459 INFO [org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158] No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2018-06-22 17:13:42,473 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-22 17:13:42,518 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:42,520 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:42,592 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$c602bd41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:42,610 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$2f924981] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:42,726 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$f4b5f1f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:42,905 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:42,915 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f250abbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:42,998 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$ecfe366f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:43,021 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$3b62e1dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:43,094 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$247d51ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:43,142 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'integrationGlobalProperties' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:43,157 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'integrationGlobalProperties' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:43,231 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e6aaebb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:43,277 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.stream.config.BindingServiceConfiguration$PostProcessorConfiguration' of type [org.springframework.cloud.stream.config.BindingServiceConfiguration$PostProcessorConfiguration$$EnhancerBySpringCGLIB$$b41849c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:43,345 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$31e28484] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:43,367 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$da3457dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:43,387 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceOAuthConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$TraceOAuthConfiguration$$EnhancerBySpringCGLIB$$374d3e1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:13:44,105 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-22 17:13:44,114 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-22 17:13:44,115 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-22 17:13:44,260 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-22 17:13:44,261 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 3942 ms
2018-06-22 17:13:45,144 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-22 17:13:45,145 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-22 17:13:45,145 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'traceFilter' to: [/*]
2018-06-22 17:13:45,145 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-22 17:13:45,146 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-22 17:13:45,146 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-22 17:13:45,146 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-22 17:13:45,146 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-22 17:13:45,147 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-22 17:13:45,147 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-22 17:13:45,147 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-22 17:13:45,148 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-22 17:13:45,586 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-22 17:13:46,930 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@28e91f6d: startup date [Fri Jun 22 17:13:46 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@552518c3
2018-06-22 17:13:46,941 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-22 17:13:47,176 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-22 17:13:48,494 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7fd4b9ec: startup date [Fri Jun 22 17:13:48 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@552518c3
2018-06-22 17:13:48,507 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-22 17:13:49,453 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-22 17:13:49,453 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-22 17:13:49,457 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-22 17:13:49,457 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-22 17:13:49,837 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@552518c3: startup date [Fri Jun 22 17:13:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@62e7f11d
2018-06-22 17:13:50,019 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:13:50,020 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:13:50,020 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:13:50,020 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:13:50,021 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:13:50,021 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:13:50,021 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:13:50,021 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-22 17:13:50,022 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:13:50,022 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:13:50,023 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:13:50,024 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:13:50,024 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:13:50,025 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:13:50,025 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:13:50,025 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:13:50,025 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:13:50,026 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:13:50,026 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-22 17:13:50,027 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-22 17:13:50,027 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-22 17:13:50,027 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-22 17:13:50,028 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-22 17:13:50,031 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-22 17:13:50,031 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-22 17:13:50,218 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-22 17:13:50,218 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-22 17:13:50,256 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-22 17:13:50,328 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-22 17:13:51,640 INFO [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:165] Initializing ExecutorService  'taskScheduler'
2018-06-22 17:13:52,426 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-22 17:13:52,427 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,427 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-22 17:13:52,428 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,428 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,429 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,429 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-22 17:13:52,430 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,430 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,431 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/channels || /channels.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,431 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,432 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-22 17:13:52,432 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,432 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-22 17:13:52,433 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-22 17:13:52,433 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-22 17:13:52,434 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-22 17:13:52,434 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-22 17:13:52,435 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-22 17:13:52,436 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-22 17:13:52,437 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-22 17:13:52,438 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-22 17:13:52,438 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,438 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-22 17:13:52,439 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-22 17:13:52,439 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,440 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,440 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:13:52,441 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-22 17:13:52,441 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-22 17:13:56,749 INFO [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:165] Initializing ExecutorService 
2018-06-22 17:13:56,922 INFO [org.springframework.integration.codec.kryo.CompositeKryoRegistrar:74] configured Kryo registration [40, java.io.File] with serializer org.springframework.integration.codec.kryo.FileSerializer
2018-06-22 17:13:57,189 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-22 17:13:57,190 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-22 17:13:57,197 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-22 17:13:57,199 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'integrationMbeanExporter' has been autodetected for JMX exposure
2018-06-22 17:13:57,200 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-22 17:13:57,201 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-22 17:13:57,201 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-22 17:13:57,202 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-22 17:13:57,203 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-22 17:13:57,207 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-22 17:13:57,219 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-22 17:13:57,228 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-22 17:13:57,233 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-22 17:13:57,242 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'integrationMbeanExporter': registering with JMX server as MBean [org.springframework.integration.monitor:name=integrationMbeanExporter,type=IntegrationMBeanExporter]
2018-06-22 17:13:57,259 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=552518c3,type=ConfigurationPropertiesRebinder]
2018-06-22 17:13:57,262 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-22 17:13:57,264 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-22 17:13:57,273 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-22 17:13:57,273 INFO [org.springframework.integration.monitor.IntegrationMBeanExporter:647] Registering MessageChannel sleuth
2018-06-22 17:13:57,276 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'org.springframework.integration:type=MessageChannel,name=sleuth': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=sleuth]
2018-06-22 17:13:57,301 INFO [org.springframework.integration.monitor.IntegrationMBeanExporter:647] Registering MessageChannel nullChannel
2018-06-22 17:13:57,303 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'org.springframework.integration:type=MessageChannel,name=nullChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=nullChannel]
2018-06-22 17:13:57,307 INFO [org.springframework.integration.monitor.IntegrationMBeanExporter:647] Registering MessageChannel errorChannel
2018-06-22 17:13:57,309 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'org.springframework.integration:type=MessageChannel,name=errorChannel': registering with JMX server as MBean [org.springframework.integration:type=MessageChannel,name=errorChannel]
2018-06-22 17:13:57,333 INFO [org.springframework.integration.monitor.IntegrationMBeanExporter:664] Registering MessageHandler errorLogger
2018-06-22 17:13:57,335 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal': registering with JMX server as MBean [org.springframework.integration:type=MessageHandler,name=errorLogger,bean=internal]
2018-06-22 17:13:57,347 INFO [org.springframework.integration.monitor.IntegrationMBeanExporter:681] Registering MessageSource sleuthStreamSpanReporter.poll.inboundChannelAdapter
2018-06-22 17:13:57,348 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'org.springframework.integration:type=MessageSource,name=sleuthStreamSpanReporter.poll.inboundChannelAdapter,bean=endpoint': registering with JMX server as MBean [org.springframework.integration:type=MessageSource,name=sleuthStreamSpanReporter.poll.inboundChannelAdapter,bean=endpoint]
2018-06-22 17:13:57,795 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-22 17:13:57,799 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=3db773b1-8bf7-44ee-b8cd-f243c529e212, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-22 17:13:57,799 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-22 17:13:57,799 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-22 17:13:57,904 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase -2147482648
2018-06-22 17:17:04,180 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-22 17:17:04,197 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@528f8f8b: startup date [Fri Jun 22 17:17:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@177bea38
2018-06-22 17:17:04,918 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-22 17:17:04,919 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-22 17:17:05,058 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-22 17:17:05,182 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-22 17:17:05,434 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-22 17:17:05,469 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-22 17:17:05,509 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:17:05,511 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:17:05,564 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$33199c57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:17:05,586 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$fb9a80c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:17:05,594 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ecf616] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:17:05,625 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$49ff2c34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:17:05,672 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1d06f913] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:17:06,022 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-22 17:17:06,034 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-22 17:17:06,036 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-22 17:17:06,211 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-22 17:17:06,211 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2014 ms
2018-06-22 17:17:06,554 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-22 17:17:06,555 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-22 17:17:06,559 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-22 17:17:06,560 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-22 17:17:06,560 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-22 17:17:06,560 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-22 17:17:06,560 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-22 17:17:06,560 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-22 17:17:06,561 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-22 17:17:06,561 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-22 17:17:06,561 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-22 17:17:06,848 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-22 17:17:07,416 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@218df7d6: startup date [Fri Jun 22 17:17:07 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@528f8f8b
2018-06-22 17:17:07,433 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-22 17:17:07,639 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-22 17:17:07,905 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@26865b57: startup date [Fri Jun 22 17:17:07 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@528f8f8b
2018-06-22 17:17:07,920 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-22 17:17:08,771 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-22 17:17:08,772 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-22 17:17:08,776 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-22 17:17:08,776 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-22 17:17:08,938 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@528f8f8b: startup date [Fri Jun 22 17:17:04 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@177bea38
2018-06-22 17:17:09,049 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:17:09,050 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-22 17:17:09,050 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:17:09,051 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:17:09,051 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:17:09,052 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:17:09,054 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:17:09,054 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:17:09,055 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:17:09,055 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:17:09,056 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:17:09,056 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:17:09,056 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:17:09,057 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:17:09,057 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:17:09,058 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:17:09,058 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:17:09,058 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:17:09,060 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-22 17:17:09,060 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-22 17:17:09,060 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-22 17:17:09,061 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-22 17:17:09,061 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-22 17:17:09,067 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-22 17:17:09,071 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-22 17:17:09,118 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-22 17:17:09,118 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-22 17:17:09,143 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-22 17:17:09,169 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-22 17:17:09,935 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-22 17:17:09,936 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-22 17:17:09,937 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-22 17:17:09,937 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:17:09,937 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-22 17:17:09,938 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-22 17:17:09,940 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-22 17:17:09,940 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-22 17:17:09,941 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:17:09,941 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:17:09,942 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-22 17:17:09,943 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-22 17:17:09,943 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:17:09,943 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:17:09,945 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:17:09,945 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-22 17:17:09,946 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-22 17:17:09,946 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:17:09,946 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-22 17:17:09,947 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-22 17:17:09,947 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-22 17:17:09,947 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:17:09,948 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:17:09,948 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:17:09,948 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:17:09,949 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-22 17:17:09,950 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-22 17:17:09,951 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:17:09,952 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-22 17:17:10,457 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-22 17:17:10,459 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-22 17:17:10,467 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-22 17:17:10,469 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-22 17:17:10,470 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-22 17:17:10,470 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-22 17:17:10,471 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-22 17:17:10,472 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-22 17:17:10,475 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-22 17:17:10,488 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-22 17:17:10,498 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-22 17:17:10,504 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-22 17:17:10,515 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=528f8f8b,type=ConfigurationPropertiesRebinder]
2018-06-22 17:17:10,519 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-22 17:17:10,521 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-22 17:17:10,876 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-22 17:17:10,882 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=17064f9b-6b77-44f8-b59a-52067c6c31fd, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-22 17:17:10,882 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-22 17:17:10,882 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-22 17:17:10,956 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-22 17:17:10,964 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-22 17:17:10,997 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-22 17:17:11,047 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-22 17:17:11,047 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-22 17:17:11,150 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-22 17:17:11,150 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-22 17:17:11,505 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-22 17:17:11,601 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-22 17:17:11,602 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-22 17:17:11,602 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-22 17:17:11,602 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-22 17:17:11,603 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-22 17:17:11,603 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-22 17:17:11,603 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-22 17:17:11,747 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-22 17:17:11,750 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-22 17:17:11,754 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-22 17:17:11,758 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529659031757 with initial instances count: 1
2018-06-22 17:17:11,787 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-22 17:17:11,790 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529659031790, current=UP, previous=STARTING]
2018-06-22 17:17:11,792 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-22 17:17:11,839 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-22 17:17:11,917 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-22 17:17:11,918 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-22 17:17:11,922 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 9.358 seconds (JVM running for 10.571)
2018-06-22 17:17:14,750 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-22 17:18:18,607 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-22 17:18:18,624 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3e4f80cb: startup date [Fri Jun 22 17:18:18 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@177bea38
2018-06-22 17:18:19,308 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-22 17:18:19,309 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-22 17:18:19,448 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-22 17:18:19,577 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-22 17:18:19,827 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-22 17:18:19,863 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-22 17:18:19,905 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:18:19,906 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:18:19,967 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$1c13a382] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:18:20,001 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$e49487f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:18:20,012 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e9e6fd41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:18:20,085 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$32f9335f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:18:20,179 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$601003e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:18:20,502 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-22 17:18:20,512 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-22 17:18:20,513 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-22 17:18:20,670 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-22 17:18:20,670 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 2046 ms
2018-06-22 17:18:21,016 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-22 17:18:21,017 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-22 17:18:21,022 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-22 17:18:21,023 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-22 17:18:21,023 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-22 17:18:21,023 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-22 17:18:21,023 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-22 17:18:21,024 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-22 17:18:21,024 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-22 17:18:21,024 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-22 17:18:21,024 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-22 17:18:21,324 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-22 17:18:21,863 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@71b0289b: startup date [Fri Jun 22 17:18:21 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3e4f80cb
2018-06-22 17:18:21,880 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-22 17:18:22,084 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-22 17:18:22,351 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4d825dbe: startup date [Fri Jun 22 17:18:22 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3e4f80cb
2018-06-22 17:18:22,366 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-22 17:18:23,245 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-22 17:18:23,246 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-22 17:18:23,250 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-22 17:18:23,250 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-22 17:18:23,423 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3e4f80cb: startup date [Fri Jun 22 17:18:18 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@177bea38
2018-06-22 17:18:23,548 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:18:23,549 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:18:23,550 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:18:23,551 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-22 17:18:23,554 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:18:23,555 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:18:23,555 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:18:23,555 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:18:23,556 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:18:23,556 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:18:23,556 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:18:23,557 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:18:23,557 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:18:23,557 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:18:23,558 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:18:23,559 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:18:23,559 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:18:23,560 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:18:23,561 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-22 17:18:23,561 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-22 17:18:23,562 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-22 17:18:23,562 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-22 17:18:23,563 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-22 17:18:23,565 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-22 17:18:23,566 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-22 17:18:23,613 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-22 17:18:23,613 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-22 17:18:23,636 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-22 17:18:23,668 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-22 17:18:24,441 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:18:24,442 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:18:24,443 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-22 17:18:24,443 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:18:24,443 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-22 17:18:24,444 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-22 17:18:24,447 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-22 17:18:24,448 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:18:24,448 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-22 17:18:24,449 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:18:24,450 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-22 17:18:24,451 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-22 17:18:24,451 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:18:24,452 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-22 17:18:24,453 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-22 17:18:24,454 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-22 17:18:24,454 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:18:24,455 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:18:24,455 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-22 17:18:24,455 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-22 17:18:24,456 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-22 17:18:24,457 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-22 17:18:24,457 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-22 17:18:24,457 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:18:24,458 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:18:24,459 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-22 17:18:24,459 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:18:24,459 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-22 17:18:24,460 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:18:24,974 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-22 17:18:24,976 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-22 17:18:24,984 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-22 17:18:24,987 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-22 17:18:24,987 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-22 17:18:24,988 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-22 17:18:24,989 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-22 17:18:24,989 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-22 17:18:24,991 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-22 17:18:25,004 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-22 17:18:25,015 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-22 17:18:25,020 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-22 17:18:25,032 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3e4f80cb,type=ConfigurationPropertiesRebinder]
2018-06-22 17:18:25,036 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-22 17:18:25,038 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-22 17:18:25,450 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-22 17:18:25,455 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=f7d39d65-6487-4881-9557-d58171b058d6, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-22 17:18:25,455 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-22 17:18:25,455 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-22 17:18:25,532 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-22 17:18:25,541 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-22 17:18:25,575 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-22 17:18:25,626 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-22 17:18:25,627 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-22 17:18:25,737 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-22 17:18:25,738 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-22 17:18:26,000 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-22 17:18:26,098 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-22 17:18:26,099 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-22 17:18:26,099 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-22 17:18:26,099 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-22 17:18:26,099 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-22 17:18:26,100 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-22 17:18:26,100 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-22 17:18:26,200 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-22 17:18:26,203 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-22 17:18:26,206 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-22 17:18:26,210 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529659106209 with initial instances count: 0
2018-06-22 17:18:26,234 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-22 17:18:26,239 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529659106239, current=UP, previous=STARTING]
2018-06-22 17:18:26,242 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-22 17:18:26,326 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-22 17:18:26,374 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-22 17:18:26,375 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-22 17:18:26,379 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 9.413 seconds (JVM running for 10.417)
2018-06-22 17:18:29,107 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-22 17:18:56,203 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-22 17:18:56,203 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-22 17:18:56,204 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-22 17:18:56,204 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-22 17:18:56,204 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-22 17:18:56,204 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: false
2018-06-22 17:18:56,204 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-22 17:18:56,240 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-22 17:20:13,750 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-22 17:20:13,751 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-22 17:20:13,776 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2018-06-22 17:23:23,194 INFO [org.springframework.boot.SpringApplication:597] The following profiles are active: dev
2018-06-22 17:23:23,228 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@290aeb20: startup date [Fri Jun 22 17:23:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ee86bcb
2018-06-22 17:23:24,377 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'registrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=registrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-22 17:23:24,378 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory:828] Overriding bean definition for bean 'filterRegistrationBean' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.xunyu.config.DruidConfiguration$Druid; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration$Druid.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=filterRegistrationBean; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/xunyu/config/DruidConfiguration.class]]
2018-06-22 17:23:24,605 WARN [org.mybatis.spring.mapper.ClassPathMapperScanner:167] No MyBatis mapper was found in '[com.xunyu.operator]' package. Please check your configuration.
2018-06-22 17:23:24,827 INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate:165] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-22 17:23:25,336 INFO [org.springframework.cloud.context.scope.GenericScope:263] BeanFactory id=9ed86561-abbc-34e6-83a0-600e2670281b
2018-06-22 17:23:25,386 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-22 17:23:25,450 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.CrmService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:23:25,454 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'com.xunyu.operator.utils.syslog.LogService2' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:23:25,539 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$813ef45f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:23:25,583 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'redisConfig' of type [com.xunyu.config.redis.RedisConfig$$EnhancerBySpringCGLIB$$49bfd8cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:23:25,594 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4f124e1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:23:25,644 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$9824843c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:23:25,696 INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:325] Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6b2c511b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-22 17:23:26,136 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:89] Tomcat initialized with port(s): 8015 (http)
2018-06-22 17:23:26,149 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting service [Tomcat]
2018-06-22 17:23:26,152 INFO [org.apache.juli.logging.DirectJDKLog:179] Starting Servlet Engine: Apache Tomcat/8.5.20
2018-06-22 17:23:26,326 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring embedded WebApplicationContext
2018-06-22 17:23:26,326 INFO [org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:276] Root WebApplicationContext: initialization completed in 3098 ms
2018-06-22 17:23:26,789 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-22 17:23:26,791 INFO [org.springframework.boot.web.servlet.ServletRegistrationBean:190] Mapping servlet: 'dispatcherServlet' to [/]
2018-06-22 17:23:26,796 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'metricsFilter' to: [/*]
2018-06-22 17:23:26,796 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-22 17:23:26,798 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-22 17:23:26,798 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-22 17:23:26,798 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'requestContextFilter' to: [/*]
2018-06-22 17:23:26,799 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-06-22 17:23:26,799 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-22 17:23:26,799 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:271] Mapping filter: 'sessionFilter' to urls: [/*]
2018-06-22 17:23:26,800 INFO [org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:258] Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-06-22 17:23:27,196 INFO [com.xunyu.config.DruidConfiguration$Druid:114] DruidConfiguration init completed................
2018-06-22 17:23:28,244 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2109a691: startup date [Fri Jun 22 17:23:28 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@290aeb20
2018-06-22 17:23:28,265 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-22 17:23:28,517 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-22 17:23:29,010 INFO [org.springframework.context.support.AbstractApplicationContext:583] Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3fd33f48: startup date [Fri Jun 22 17:23:29 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@290aeb20
2018-06-22 17:23:29,041 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:155] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-22 17:23:30,140 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-22 17:23:30,140 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-22 17:23:30,144 WARN [com.netflix.config.sources.URLConfigurationSource:121] No URLs will be polled as dynamic configuration sources.
2018-06-22 17:23:30,145 INFO [com.netflix.config.sources.URLConfigurationSource:122] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-06-22 17:23:30,320 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:534] Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@290aeb20: startup date [Fri Jun 22 17:23:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ee86bcb
2018-06-22 17:23:30,426 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigShunt]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:23:30,427 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recharge]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recharge(com.xunyu.model.operator.out.RechargeRecordModel,org.springframework.validation.BindingResult)
2018-06-22 17:23:30,428 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/stopUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.stopUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:23:30,428 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/abandon]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.abandon(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:23:30,428 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/viewDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.viewDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:23:30,429 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.addGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:23:30,431 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/startUsing]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.startUsing(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:23:30,431 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/recover]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.recover(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:23:30,432 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/getConfigList]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.vo.out.GatewayOutConfigListVO>> com.xunyu.operator.controller.GatewayOutConfigController.getGatewayOutListConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:23:30,432 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigShunt]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigShunt(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:23:30,432 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInList]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigListVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInListPage(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:23:30,433 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/selectAccessConfig]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.OperAccessCoreConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.selectAccessConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:23:30,433 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/addConfigStraight]}" onto public com.commons.core.message.Result com.xunyu.operator.controller.GatewayOutConfigController.addConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:23:30,434 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/updateConfigStraight]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.updateGatewayOutConfigStraight(com.xunyu.model.operator.out.GatewayOutConfigModel,org.springframework.validation.BindingResult)
2018-06-22 17:23:30,434 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:23:30,435 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/deleteConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.deleteGatewayOutConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:23:30,435 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/clearGatewayConfig]}" onto public com.commons.core.message.Result<java.lang.String> com.xunyu.operator.controller.GatewayOutConfigController.clearGatewayConfig(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:23:30,436 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/outConfig/firstComeInDetail]}" onto public com.commons.core.message.Result<com.xunyu.operator.vo.out.GatewayOutConfigVO> com.xunyu.operator.controller.GatewayOutConfigController.firstComeInDetail(com.xunyu.model.operator.out.GatewayOutConfigModel)
2018-06-22 17:23:30,438 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/getOperAccessDetail],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.getOperAccessDetail(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-22 17:23:30,438 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/delOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.delOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-22 17:23:30,439 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/listOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<java.util.List<com.xunyu.operator.pojo.access.OperAccessCoreConfig>> com.xunyu.operator.controller.OperAccessController.listOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.model.operator.access.OperAccessModel)
2018-06-22 17:23:30,439 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/saveOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.saveOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-22 17:23:30,440 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/access/updateOperAccess],methods=[POST]}" onto public com.commons.core.message.Result<com.xunyu.operator.pojo.access.OperAccessCoreConfig> com.xunyu.operator.controller.OperAccessController.updateOperAccessData(javax.servlet.http.HttpServletRequest,com.xunyu.operator.pojo.access.OperAccessCoreConfig)
2018-06-22 17:23:30,442 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-22 17:23:30,442 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-22 17:23:30,494 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-22 17:23:30,494 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-22 17:23:30,521 INFO [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:273] Detected @ExceptionHandler methods in globalExceptionHandler
2018-06-22 17:23:30,551 INFO [org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:362] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-22 17:23:31,357 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:23:31,359 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/jolokia/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.actuate.endpoint.mvc.JolokiaMvcEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-22 17:23:31,360 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-06-22 17:23:31,360 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-06-22 17:23:31,361 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-06-22 17:23:31,361 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:23:31,362 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:23:31,362 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:23:31,363 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-06-22 17:23:31,363 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:23:31,365 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-06-22 17:23:31,366 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-06-22 17:23:31,366 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:23:31,367 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:23:31,368 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
2018-06-22 17:23:31,369 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-06-22 17:23:31,371 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-06-22 17:23:31,372 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-22 17:23:31,372 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-22 17:23:31,373 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018-06-22 17:23:31,374 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018-06-22 17:23:31,374 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:23:31,374 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-06-22 17:23:31,375 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:23:31,375 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-06-22 17:23:31,376 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:23:31,376 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-06-22 17:23:31,377 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:23:31,377 INFO [org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:543] Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-06-22 17:23:31,901 INFO [org.springframework.jmx.export.MBeanExporter:431] Registering beans for JMX exposure on startup
2018-06-22 17:23:31,902 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-22 17:23:31,912 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-06-22 17:23:31,915 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-06-22 17:23:31,916 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-06-22 17:23:31,916 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-06-22 17:23:31,917 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018-06-22 17:23:31,918 INFO [org.springframework.jmx.export.MBeanExporter:916] Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-06-22 17:23:31,920 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-06-22 17:23:31,933 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-06-22 17:23:31,943 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018-06-22 17:23:31,948 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-06-22 17:23:31,960 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=290aeb20,type=ConfigurationPropertiesRebinder]
2018-06-22 17:23:31,966 INFO [org.springframework.jmx.export.MBeanExporter:671] Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-22 17:23:31,968 INFO [org.springframework.jmx.export.MBeanExporter:678] Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-06-22 17:23:32,320 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: No access restrictor found, access to any MBean is allowed
2018-06-22 17:23:32,324 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: jolokia:type=Config is already registered. Adding it with jolokia:type=Config,uuid=c12879d6-a850-4cc3-9491-d862b9cf3e18, but you should revise your setup in order to either use a qualifier or ensure, that only a single agent gets registered (otherwise history functionality might not work)
2018-06-22 17:23:32,325 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Cannot register (legacy) MBean handler for config store with name jmx4perl:type=Config since it already exists. This is the case if another agent has been already started within the same JVM. The registration is skipped.
2018-06-22 17:23:32,325 INFO [org.apache.juli.logging.DirectJDKLog:179] jolokia: Jolokia Discovery MBean registration is skipped because there is already one registered.
2018-06-22 17:23:32,406 INFO [org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:343] Starting beans in phase 0
2018-06-22 17:23:32,414 INFO [org.springframework.cloud.netflix.eureka.InstanceInfoFactory:70] Setting initial instance status as: STARTING
2018-06-22 17:23:32,451 INFO [com.netflix.discovery.DiscoveryClient:344] Initializing Eureka in region us-east-1
2018-06-22 17:23:32,504 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:70] Using JSON encoding codec LegacyJacksonJson
2018-06-22 17:23:32,504 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:71] Using JSON decoding codec LegacyJacksonJson
2018-06-22 17:23:32,610 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:80] Using XML encoding codec XStreamXml
2018-06-22 17:23:32,610 INFO [com.netflix.discovery.provider.DiscoveryJerseyProvider:81] Using XML decoding codec XStreamXml
2018-06-22 17:23:33,063 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-22 17:23:33,187 INFO [com.netflix.discovery.DiscoveryClient:920] Disable delta property : false
2018-06-22 17:23:33,188 INFO [com.netflix.discovery.DiscoveryClient:921] Single vip registry refresh property : null
2018-06-22 17:23:33,188 INFO [com.netflix.discovery.DiscoveryClient:922] Force full registry fetch : false
2018-06-22 17:23:33,189 INFO [com.netflix.discovery.DiscoveryClient:923] Application is null : false
2018-06-22 17:23:33,189 INFO [com.netflix.discovery.DiscoveryClient:924] Registered Applications size is zero : true
2018-06-22 17:23:33,189 INFO [com.netflix.discovery.DiscoveryClient:926] Application version is -1: true
2018-06-22 17:23:33,189 INFO [com.netflix.discovery.DiscoveryClient:1009] Getting all instance registry info from the eureka server
2018-06-22 17:23:33,388 INFO [com.netflix.discovery.DiscoveryClient:1018] The response status is 200
2018-06-22 17:23:33,390 INFO [com.netflix.discovery.DiscoveryClient:1244] Starting heartbeat executor: renew interval is: 30
2018-06-22 17:23:33,393 INFO [com.netflix.discovery.InstanceInfoReplicator:59] InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-06-22 17:23:33,397 INFO [com.netflix.discovery.DiscoveryClient:425] Discovery Client initialized at timestamp 1529659413397 with initial instances count: 2
2018-06-22 17:23:33,422 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:40] Registering application xunyu-operator with eureka with status UP
2018-06-22 17:23:33,422 INFO [com.netflix.discovery.DiscoveryClient$3:1279] Saw local status change event StatusChangeEvent [timestamp=1529659413422, current=UP, previous=STARTING]
2018-06-22 17:23:33,424 INFO [com.netflix.discovery.DiscoveryClient:795] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015: registering service...
2018-06-22 17:23:33,455 INFO [com.netflix.discovery.DiscoveryClient:804] DiscoveryClient_XUNYU-OPERATOR/192.168.3.10:8015 - registration status: 204
2018-06-22 17:23:33,568 INFO [org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:201] Tomcat started on port(s): 8015 (http)
2018-06-22 17:23:33,569 INFO [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:117] Updating port to 8015
2018-06-22 17:23:33,573 INFO [org.springframework.boot.StartupInfoLogger:57] Started OperApplication in 13.087 seconds (JVM running for 14.854)
2018-06-22 17:23:36,271 INFO [com.alibaba.druid.pool.DruidDataSource:922] {dataSource-1} inited
2018-06-22 17:24:44,428 INFO [org.apache.juli.logging.DirectJDKLog:179] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-22 17:24:44,429 INFO [org.springframework.web.servlet.FrameworkServlet:489] FrameworkServlet 'dispatcherServlet': initialization started
2018-06-22 17:24:44,463 INFO [org.springframework.web.servlet.FrameworkServlet:508] FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2018-06-22 17:28:33,193 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-22 17:33:33,196 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-22 17:38:33,198 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-22 17:43:33,199 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-22 17:48:33,201 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-22 17:53:33,202 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
2018-06-22 17:58:33,204 INFO [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43] Resolving eureka endpoints via configuration
